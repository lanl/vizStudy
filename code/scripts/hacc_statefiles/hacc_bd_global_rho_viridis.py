# state file generated using paraview version 5.11.0
import paraview
paraview.compatibility.major = 5
paraview.compatibility.minor = 11

#### import the simple module from the paraview
from paraview.simple import *
#### disable automatic camera reset on 'Show'
paraview.simple._DisableFirstRenderCameraReset()

# ----------------------------------------------------------------
# setup views used in the visualization
# ----------------------------------------------------------------

# get the material library
materialLibrary1 = GetMaterialLibrary()

# Create a new 'Render View'
renderView1 = CreateView('RenderView')
renderView1.ViewSize = [800, 800]
renderView1.AxesGrid = 'GridAxes3DActor'
renderView1.CenterOfRotation = [32.00000262260437, 31.999998092651367, 31.999998092651367]
renderView1.StereoType = 'Crystal Eyes'
renderView1.CameraPosition = [155.63849518404473, 155.6384906540917, 155.63849065409173]
renderView1.CameraFocalPoint = [32.00000262260437, 31.999998092651367, 31.999998092651367]
renderView1.CameraViewUp = [-0.40824829046386296, 0.8164965809277263, -0.40824829046386285]
renderView1.CameraFocalDisk = 1.0
renderView1.CameraParallelScale = 55.42561992320987
renderView1.OSPRayMaterialLibrary = materialLibrary1

SetActiveView(None)

# ----------------------------------------------------------------
# setup view layouts
# ----------------------------------------------------------------

# create new layout object 'Layout #1'
layout1 = CreateLayout(name='Layout #1')
layout1.AssignView(0, renderView1)
layout1.SetSize(800, 800)

# ----------------------------------------------------------------
# restore active view
SetActiveView(renderView1)
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# setup the data processing pipelines
# ----------------------------------------------------------------

# create a new 'vtkGenIOReader'
m000fullmpicosmo624 = vtkGenIOReader(registrationName='m000.full.mpicosmo.624', FileNames=['/Users/jonwang/Downloads/output_sf_l64n256_ce_fire3_cloudy/m000.full.mpicosmo.624'])
m000fullmpicosmo624.PointArrayStatus = ['mask', 'mass', 'mu', 'phi', 'rho', 'uu']
m000fullmpicosmo624.ShowData = 0.8
m000fullmpicosmo624.Scalar = ''
m000fullmpicosmo624.Value = ''
m000fullmpicosmo624.Value2range = ''

# create a new 'Threshold'
threshold1 = Threshold(registrationName='Threshold1', Input=m000fullmpicosmo624)
threshold1.Scalars = ['POINTS', 'mask']
threshold1.LowerThreshold = 4.0
threshold1.UpperThreshold = 72.0

# create a new 'Calculator'
calculator1 = Calculator(registrationName='Calculator1', Input=threshold1)
calculator1.ResultArrayName = 'temp'
calculator1.Function = 'mass*uu*uu'

# ----------------------------------------------------------------
# setup the visualization in view 'renderView1'
# ----------------------------------------------------------------

# show data from calculator1
calculator1Display = Show(calculator1, renderView1, 'UnstructuredGridRepresentation')

# get 2D transfer function for 'rho'
rhoTF2D = GetTransferFunction2D('rho')

# get color transfer function/color map for 'rho'
rhoLUT = GetColorTransferFunction('rho')
rhoLUT.TransferFunction2D = rhoTF2D
rhoLUT.RGBPoints = [430638591.9999999, 0.267004, 0.004874, 0.329415, 467667169.9066111, 0.26851, 0.009605, 0.335427, 507868978.64684546, 0.269944, 0.014625, 0.341379, 551538232.6141647, 0.271305, 0.019942, 0.347269, 598949802.1389387, 0.272594, 0.025563, 0.353093, 650450665.7927263, 0.273809, 0.031497, 0.358853, 706364988.934931, 0.274952, 0.037752, 0.364543, 767101977.0014341, 0.276022, 0.044167, 0.370164, 833061451.7103639, 0.277018, 0.050344, 0.375715, 904673442.6850774, 0.277941, 0.056324, 0.381191, 982462037.7502095, 0.278791, 0.062145, 0.386592, 1066916866.9058758, 0.279566, 0.067836, 0.391917, 1158656007.4752882, 0.280267, 0.073417, 0.397163, 1258256899.3179777, 0.280894, 0.078907, 0.402329, 1366448465.2585585, 0.281446, 0.08432, 0.407414, 1483942912.7863731, 0.281924, 0.089666, 0.412415, 1611506259.1148744, 0.282327, 0.094955, 0.417331, 1750072068.5224688, 0.282656, 0.100196, 0.42216, 1900512525.1284266, 0.28291, 0.105393, 0.426902, 2063928617.8951623, 0.283091, 0.110553, 0.431554, 2241348947.7564416, 0.283197, 0.11568, 0.436115, 2434071954.169904, 0.283229, 0.120777, 0.440584, 2643366301.354835, 0.283187, 0.125848, 0.44496, 2870596505.4734364, 0.283072, 0.130895, 0.449241, 3117425536.3963656, 0.282884, 0.13592, 0.453427, 3385407026.739499, 0.282623, 0.140926, 0.457517, 3676502182.083154, 0.28229, 0.145912, 0.46151, 3992543262.2955537, 0.281887, 0.150881, 0.465405, 4335843194.024465, 0.281412, 0.155834, 0.469201, 4708562833.182857, 0.280868, 0.160771, 0.472899, 5113429904.865753, 0.280255, 0.165693, 0.476498, 5553109583.184777, 0.279574, 0.170599, 0.479997, 6030468405.317485, 0.278826, 0.17549, 0.483397, 6548999891.598371, 0.278012, 0.180367, 0.486697, 7111967869.732111, 0.277134, 0.185228, 0.489898, 7723492385.244393, 0.276194, 0.190074, 0.493001, 8387422598.135479, 0.275191, 0.194905, 0.496005, 9108617439.657558, 0.274128, 0.199721, 0.498911, 9891824418.20415, 0.273006, 0.20452, 0.501721, 10742149732.747896, 0.271828, 0.209303, 0.504434, 11665816435.298183, 0.270595, 0.214069, 0.507052, 12668638423.474554, 0.269308, 0.218818, 0.509577, 13757954786.542908, 0.267968, 0.223549, 0.512008, 14940622081.952671, 0.26658, 0.228262, 0.514349, 16225295585.470955, 0.265145, 0.232956, 0.516599, 17620432093.91569, 0.263663, 0.237631, 0.518762, 19135127344.175278, 0.262138, 0.242286, 0.520837, 20780466537.595085, 0.260571, 0.246922, 0.522828, 22566806043.624687, 0.258965, 0.251537, 0.524736, 24507219074.90671, 0.257322, 0.25613, 0.526563, 26613919304.048767, 0.255645, 0.260703, 0.528312, 28902324483.374252, 0.253935, 0.265254, 0.529983, 31387498812.14129, 0.252194, 0.269783, 0.531579, 34085644641.64666, 0.250425, 0.27429, 0.533103, 37016508181.41571, 0.248629, 0.278775, 0.534556, 40198537363.48928, 0.246811, 0.283237, 0.535941, 43655019667.09059, 0.244972, 0.287675, 0.53726, 47407711461.894165, 0.243113, 0.292092, 0.538516, 51484076585.34549, 0.241237, 0.296485, 0.539709, 55910949086.33678, 0.239346, 0.300855, 0.540844, 60717190418.39937, 0.237441, 0.305202, 0.541921, 65937974754.602684, 0.235526, 0.309527, 0.542944, 71606163629.89253, 0.233603, 0.313828, 0.543914, 77763239325.89325, 0.231674, 0.318106, 0.544834, 84447956739.40103, 0.229739, 0.322361, 0.545706, 91709237551.82579, 0.227802, 0.326594, 0.546532, 99594881594.2518, 0.225863, 0.330805, 0.547314, 108156300139.32124, 0.223925, 0.334994, 0.548053, 117456149386.92348, 0.221989, 0.339161, 0.548752, 127552966005.3755, 0.220057, 0.343307, 0.549413, 138520642908.2142, 0.21813, 0.347432, 0.550038, 150428214683.84827, 0.21621, 0.351535, 0.550627, 163362826142.85406, 0.214298, 0.355619, 0.551184, 177409623729.62225, 0.212395, 0.359683, 0.55171, 192660186995.1161, 0.210503, 0.363727, 0.552206, 209226126221.60165, 0.208623, 0.367752, 0.552675, 227211713517.5853, 0.206756, 0.371758, 0.553117, 246748575265.6391, 0.204903, 0.375746, 0.553533, 267959683652.26248, 0.203063, 0.379716, 0.553925, 291000270832.03204, 0.201239, 0.38367, 0.554294, 316015362726.7269, 0.19943, 0.387607, 0.554642, 343188030703.52686, 0.197636, 0.391528, 0.554969, 372697148018.1266, 0.19586, 0.395433, 0.555276, 404735102415.5847, 0.1941, 0.399323, 0.555565, 439536361637.92535, 0.192357, 0.403199, 0.555836, 477319977598.12823, 0.190631, 0.407061, 0.556089, 518362467298.80566, 0.188923, 0.41091, 0.556326, 562922167250.8549, 0.187231, 0.414746, 0.556547, 611325184798.8218, 0.185556, 0.41857, 0.556753, 663890149138.0994, 0.183898, 0.422383, 0.556944, 720959762995.1191, 0.182256, 0.426184, 0.55712, 782951686727.7621, 0.180629, 0.429975, 0.557282, 850256120282.4213, 0.179019, 0.433756, 0.55743, 923365626897.3107, 0.177423, 0.437527, 0.557565, 1002740384670.5472, 0.175841, 0.44129, 0.557685, 1088961292744.3889, 0.174274, 0.445044, 0.557792, 1182595929339.3079, 0.172719, 0.448791, 0.557885, 1284254755161.473, 0.171176, 0.45253, 0.557965, 1394681753895.0945, 0.169646, 0.456262, 0.55803, 1514571993645.6882, 0.168126, 0.459988, 0.558082, 1644802883546.7117, 0.166617, 0.463708, 0.558119, 1786194144671.4456, 0.165117, 0.467423, 0.558141, 1939780540017.7769, 0.163625, 0.471133, 0.558148, 2106573103856.9617, 0.162142, 0.474838, 0.55814, 2287659257574.9805, 0.160665, 0.47854, 0.558115, 2484364268729.4385, 0.159194, 0.482237, 0.558073, 2697926270938.1406, 0.157729, 0.485932, 0.558013, 2929908204200.931, 0.15627, 0.489624, 0.557936, 3181770248045.6094, 0.154815, 0.493313, 0.55784, 3455355638903.228, 0.153364, 0.497, 0.557724, 3752465344923.6694, 0.151918, 0.500685, 0.557587, 4075036403591.532, 0.150476, 0.504369, 0.55743, 4425429530788.72, 0.149039, 0.508051, 0.55725, 4805850229606.813, 0.147607, 0.511733, 0.557049, 5219082584858.645, 0.14618, 0.515413, 0.556823, 5667727632827.0205, 0.144759, 0.519093, 0.556572, 6155068753907.012, 0.143343, 0.522773, 0.556295, 6684314035469.251, 0.141935, 0.526453, 0.555991, 7258913946913.238, 0.140536, 0.530132, 0.555659, 7883073661332.571, 0.139147, 0.533812, 0.555298, 8560721869312.132, 0.13777, 0.537492, 0.554906, 9296817896383.107, 0.136408, 0.541173, 0.554483, 10095995001412.385, 0.135066, 0.544853, 0.554029, 10964101911474.352, 0.133743, 0.548535, 0.553541, 11906853233225.5, 0.132444, 0.552216, 0.553018, 12930395331499.76, 0.131172, 0.555899, 0.552459, 14042218934377.639, 0.129933, 0.559582, 0.551864, 15249322268146.195, 0.128729, 0.563265, 0.551229, 16560539442172.887, 0.127568, 0.566949, 0.550556, 17984123739146.926, 0.126453, 0.570633, 0.549841, 19530493570667.215, 0.125394, 0.574318, 0.549086, 21209382356653.902, 0.124395, 0.578002, 0.548287, 23033076938454.098, 0.123463, 0.581687, 0.547445, 25013582401012.637, 0.122606, 0.585371, 0.546557, 27163810854710.617, 0.121831, 0.589055, 0.545623, 29499498610428.887, 0.121148, 0.592739, 0.544641, 32035347345130.73, 0.120565, 0.596422, 0.543611, 34789915507323.188, 0.120092, 0.600104, 0.54253, 37780541361161.96, 0.119738, 0.603785, 0.5414, 41029111612723.766, 0.119512, 0.607464, 0.540218, 44557011071838.82, 0.119423, 0.611141, 0.538982, 48387240244231.38, 0.119483, 0.614817, 0.537692, 52547830419738.76, 0.119699, 0.61849, 0.536347, 57064969881699.4, 0.120081, 0.622161, 0.534946, 61971717029439.77, 0.120638, 0.625828, 0.533488, 67298956732451.15, 0.12138, 0.629492, 0.531973, 73085676057414.08, 0.122312, 0.633153, 0.530398, 79369968036869.2, 0.123444, 0.636809, 0.528763, 86192803762913.23, 0.12478, 0.640461, 0.527068, 93604115727086.4, 0.126326, 0.644107, 0.525311, 101650553450116.11, 0.128087, 0.647749, 0.523491, 110391004277332.67, 0.130067, 0.651384, 0.521608, 119880483817848.97, 0.132268, 0.655014, 0.519661, 130188440227225.94, 0.134692, 0.658636, 0.517649, 141382729106690.88, 0.137339, 0.662252, 0.515571, 153536332781404.38, 0.14021, 0.665859, 0.513427, 166738196630827.62, 0.143303, 0.669459, 0.511215, 181071418036946.5, 0.146616, 0.67305, 0.508936, 196640893773672.03, 0.150148, 0.676631, 0.506589, 213544623842166.1, 0.153894, 0.680203, 0.504172, 231906317121337.06, 0.157851, 0.683765, 0.501686, 251846845652886.53, 0.162016, 0.687316, 0.499129, 273496213776784.38, 0.166383, 0.690856, 0.496502, 297012861023755.56, 0.170948, 0.694384, 0.493803, 322544809812573.1, 0.175707, 0.6979, 0.491033, 350278914094891.1, 0.180653, 0.701402, 0.488189, 380389742513725.44, 0.185783, 0.704891, 0.485273, 413097659261570.6, 0.19109, 0.708366, 0.482284, 448617975236888.06, 0.196571, 0.711827, 0.479221, 487182268816672.56, 0.202219, 0.715272, 0.476084, 529072770343293.25, 0.20803, 0.718701, 0.472873, 574553154025676.6, 0.214, 0.722114, 0.469588, 623956265173992.0, 0.220124, 0.725509, 0.466226, 677593065122564.1, 0.226397, 0.728888, 0.462789, 735856091397901.8, 0.232815, 0.732247, 0.459277, 799128880029863.6, 0.239374, 0.735588, 0.455688, 867823944513807.6, 0.24607, 0.73891, 0.452024, 942444025332421.0, 0.252899, 0.742211, 0.448284, 1023458808692896.1, 0.259857, 0.745492, 0.444467, 1111461196160976.1, 0.266941, 0.748751, 0.440573, 1207005107099135.0, 0.274149, 0.751988, 0.436601, 1310789773573930.8, 0.281477, 0.755203, 0.432552, 1423468454410988.2, 0.288921, 0.758394, 0.428426, 1545865781406151.8, 0.296479, 0.761561, 0.424223, 1678787476264296.5, 0.304148, 0.764704, 0.419943, 1823100135734823.8, 0.311925, 0.767822, 0.415586, 1979859902884552.5, 0.319809, 0.770914, 0.411152, 2150053481288018.5, 0.327796, 0.77398, 0.40664, 2334926421879590.5, 0.335885, 0.777018, 0.402049, 2535642382877382.0, 0.344074, 0.780029, 0.397381, 2753670291341483.5, 0.35236, 0.783011, 0.392636, 2990445389547403.0, 0.360741, 0.785964, 0.387814, 3247511357258387.5, 0.369214, 0.788888, 0.382914, 3526749515493047.5, 0.377779, 0.791781, 0.377939, 3829917491823063.5, 0.386433, 0.794644, 0.372886, 4159234001899948.0, 0.395174, 0.797475, 0.367757, 4516771884842750.0, 0.404001, 0.800275, 0.362552, 4905147759024272.0, 0.412913, 0.803041, 0.357269, 5326918239683981.0, 0.421908, 0.805774, 0.35191, 5784833103131431.0, 0.430983, 0.808473, 0.346476, 6282243570319790.0, 0.440137, 0.811138, 0.340967, 6822280525498827.0, 0.449368, 0.813768, 0.335384, 7408896194953744.0, 0.458674, 0.816363, 0.329727, 8045782953255078.0, 0.468053, 0.818921, 0.323998, 8737601815843897.0, 0.477504, 0.821444, 0.318195, 9488906913820168.0, 0.487026, 0.823929, 0.312321, 1.0304596458543742e+16, 0.496615, 0.826376, 0.306377, 1.1190640022334228e+16, 0.506271, 0.828786, 0.300362, 1.2152614688951366e+16, 0.515992, 0.831158, 0.294279, 1.3197560609122964e+16, 0.525776, 0.833491, 0.288127, 1.4332055056427478e+16, 0.535621, 0.835785, 0.281908, 1.5564400756691004e+16, 0.545524, 0.838039, 0.275626, 1.690271004131007e+16, 0.555484, 0.840254, 0.269281, 1.8355708156204644e+16, 0.565498, 0.84243, 0.262877, 1.993402877613879e+16, 0.575563, 0.844566, 0.256415, 2.1647606431035484e+16, 0.585678, 0.846661, 0.249897, 2.3508981830533384e+16, 0.595839, 0.848717, 0.243329, 2.552987115534439e+16, 0.606045, 0.850733, 0.236712, 2.7725064156117924e+16, 0.616293, 0.852709, 0.230052, 3.0109011431495096e+16, 0.626579, 0.854645, 0.223353, 3.2697255372518812e+16, 0.636902, 0.856542, 0.21662, 3.5508737878697948e+16, 0.647257, 0.8584, 0.209861, 3.8561155453982824e+16, 0.657642, 0.860219, 0.203082, 4.187684702325276e+16, 0.668054, 0.861999, 0.196293, 4.5476682767569e+16, 0.678489, 0.863742, 0.189503, 4.9387007857042376e+16, 0.688944, 0.865448, 0.182725, 5.363356332601628e+16, 0.699415, 0.867117, 0.175971, 5.824403503246628e+16, 0.709898, 0.868751, 0.169257, 6.325216442184289e+16, 0.720391, 0.87035, 0.162603, 6.868947450071978e+16, 0.730889, 0.871916, 0.156029, 7.459575787885686e+16, 0.741388, 0.873449, 0.149561, 8.100819087405189e+16, 0.751884, 0.874951, 0.143228, 8.797370247142778e+16, 0.762373, 0.876424, 0.137064, 9.553613616039694e+16, 0.772852, 0.877868, 0.131109, 1.0375083713339302e+17, 0.783315, 0.879285, 0.125405, 1.1267188143141493e+17, 0.79376, 0.880678, 0.120005, 1.2235743072625445e+17, 0.804182, 0.882046, 0.114965, 1.3287836809756109e+17, 0.814576, 0.883393, 0.110347, 1.4430091619098262e+17, 0.82494, 0.88472, 0.106217, 1.5670867020196886e+17, 0.83527, 0.886029, 0.102646, 1.7017972909338957e+17, 0.845561, 0.887322, 0.099702, 1.8481267995734954e+17, 0.85581, 0.888601, 0.097452, 2.0070384913043184e+17, 0.866013, 0.889868, 0.095953, 2.179568407350846e+17, 0.876168, 0.891125, 0.09525, 2.3669791969866797e+17, 0.886271, 0.892374, 0.095374, 2.570450492584303e+17, 0.89632, 0.893616, 0.096335, 2.791471385945737e+17, 0.906311, 0.894855, 0.098125, 3.0314330637860384e+17, 0.916242, 0.896091, 0.100717, 3.2920916704607616e+17, 0.926106, 0.89733, 0.104071, 3.575163079201037e+17, 0.935904, 0.89857, 0.108131, 3.8824928033591136e+17, 0.945636, 0.899815, 0.112838, 4.216330016074708e+17, 0.9553, 0.901065, 0.118128, 4.578776011430284e+17, 0.964894, 0.902323, 0.123941, 4.972483327508863e+17, 0.974417, 0.90359, 0.130215, 5.3999301028222426e+17, 0.983868, 0.904867, 0.136897, 5.864244579548516e+17, 0.993248, 0.906157, 0.143936]
rhoLUT.UseLogScale = 1
rhoLUT.NanColor = [1.0, 0.0, 0.0]
rhoLUT.ScalarRangeInitialized = 1.0

# get opacity transfer function/opacity map for 'rho'
rhoPWF = GetOpacityTransferFunction('rho')
rhoPWF.Points = [430638592.0, 0.0, 0.5, 0.0, 5.864244579548529e+17, 1.0, 0.5, 0.0]
rhoPWF.ScalarRangeInitialized = 1

# trace defaults for the display properties.
calculator1Display.Representation = 'Points'
calculator1Display.ColorArrayName = ['POINTS', 'rho']
calculator1Display.LookupTable = rhoLUT
calculator1Display.Opacity = 0.05
calculator1Display.SelectTCoordArray = 'None'
calculator1Display.SelectNormalArray = 'None'
calculator1Display.SelectTangentArray = 'None'
calculator1Display.OSPRayScaleArray = 'temp'
calculator1Display.OSPRayScaleFunction = 'PiecewiseFunction'
calculator1Display.SelectOrientationVectors = 'None'
calculator1Display.ScaleFactor = 6.399999618530273
calculator1Display.SelectScaleArray = 'temp'
calculator1Display.GlyphType = 'Arrow'
calculator1Display.GlyphTableIndexArray = 'temp'
calculator1Display.GaussianRadius = 0.31999998092651366
calculator1Display.SetScaleArray = ['POINTS', 'temp']
calculator1Display.ScaleTransferFunction = 'PiecewiseFunction'
calculator1Display.OpacityArray = ['POINTS', 'temp']
calculator1Display.OpacityTransferFunction = 'PiecewiseFunction'
calculator1Display.DataAxesGrid = 'GridAxesRepresentation'
calculator1Display.PolarAxes = 'PolarAxesRepresentation'
calculator1Display.ScalarOpacityFunction = rhoPWF
calculator1Display.ScalarOpacityUnitDistance = 0.4330126556500771
calculator1Display.OpacityArrayName = ['POINTS', 'temp']
calculator1Display.SelectInputVectors = [None, '']
calculator1Display.WriteLog = ''

# init the 'PiecewiseFunction' selected for 'OSPRayScaleFunction'
calculator1Display.OSPRayScaleFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 51.47661520540714, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
calculator1Display.ScaleTransferFunction.Points = [68803838.85388254, 0.0, 0.5, 0.0, 5.2045838155130064e+20, 1.0, 0.5, 0.0]

# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
calculator1Display.OpacityTransferFunction.Points = [68803838.85388254, 0.0, 0.5, 0.0, 5.2045838155130064e+20, 1.0, 0.5, 0.0]

# setup the color legend parameters for each legend in this view

# get color legend/bar for rhoLUT in view renderView1
rhoLUTColorBar = GetScalarBar(rhoLUT, renderView1)
rhoLUTColorBar.Title = 'rho'
rhoLUTColorBar.ComponentTitle = ''

# set color bar visibility
rhoLUTColorBar.Visibility = 1

# show color legend
calculator1Display.SetScalarBarVisibility(renderView1, True)

# ----------------------------------------------------------------
# setup color maps and opacity mapes used in the visualization
# note: the Get..() functions create a new object, if needed
# ----------------------------------------------------------------

# ----------------------------------------------------------------
# restore active source
SetActiveSource(calculator1)
# ----------------------------------------------------------------


if __name__ == '__main__':
    # generate extracts
    SaveExtracts(ExtractsOutputDirectory='extracts')