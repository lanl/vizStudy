# state file generated using paraview version 5.10.1
import sys

# uncomment the following three lines to ensure this script works in future versions
#import paraview
#paraview.compatibility.major = 5
#paraview.compatibility.minor = 10

#### import the simple module from the paraview
from paraview.simple import *

def saveScreenshot(inputFilename, regName, outputName):   
	#### disable automatic camera reset on 'Show'
	paraview.simple._DisableFirstRenderCameraReset()

	# ----------------------------------------------------------------
	# setup views used in the visualization
	# ----------------------------------------------------------------

	# Create a new 'Render View'
	renderView1 = CreateView('RenderView')
	renderView1.ViewSize = [800, 800]
	renderView1.AxesGrid = 'GridAxes3DActor'
	renderView1.StereoType = 'Crystal Eyes'
	renderView1.CameraPosition = [256.0, -1457.1836768696405, 256.0]
	renderView1.CameraFocalPoint = [256.0, 256.0, 256.0]
	renderView1.CameraViewUp = [0.0, 0.0, 1.0]
	renderView1.CameraViewAngle = 21.916666666666668
	renderView1.CameraFocalDisk = 1.0
	renderView1.CameraParallelScale = 443.4045633326258
	renderView1.BackEnd = ''

	renderView1.Background = (1., 1., 1.)
	renderView1.UseColorPaletteForBackground = 0

	SetActiveView(None)

	# ----------------------------------------------------------------
	# setup view layouts
	# ----------------------------------------------------------------

	# create new layout object 'Layout #1'
	layout1 = CreateLayout(name='Layout #1')
	layout1.AssignView(0, renderView1)
	layout1.SetSize(800, 800)

	# ----------------------------------------------------------------
	# restore active view
	SetActiveView(renderView1)
	# ----------------------------------------------------------------

	# ----------------------------------------------------------------
	# setup the data processing pipelines
	# ----------------------------------------------------------------

	# create a new 'VisItPixieReader'
	nVB_C009_l10n512_S12345T692_z54h5 = VisItPixieReader(registrationName=regName, FileName=inputFilename)
	nVB_C009_l10n512_S12345T692_z54h5.Meshes = ['mesh_512x512x512']
	nVB_C009_l10n512_S12345T692_z54h5.CellArrays = ['native_fields/baryon_density', 'native_fields/dark_matter_density', 'native_fields/temperature', 'native_fields/velocity_x']

	# create a new 'Resample To Image'
	resampleToImage1 = ResampleToImage(registrationName='ResampleToImage1', Input=nVB_C009_l10n512_S12345T692_z54h5)
	resampleToImage1.SamplingDimensions = [512, 512, 512]
	resampleToImage1.SamplingBounds = [0.0, 512.0, 0.0, 512.0, 0.0, 512.0]

	# ----------------------------------------------------------------
	# 

	# show data from resampleToImage1
	resampleToImage1Display = Show(resampleToImage1, renderView1, 'UniformGridRepresentation')

	# get color transfer function/color map for 'native_fieldstemperature'
	native_fieldstemperatureLUT = GetColorTransferFunction('native_fieldstemperature')
	native_fieldstemperatureLUT.AutomaticRescaleRangeMode = 'Never'
	native_fieldstemperatureLUT.RGBPoints = [0.0, 0.050383, 0.029803, 0.527975, 392.2, 0.063536, 0.028426, 0.533124, 784.3, 0.075353, 0.027206, 0.538007, 1176.5, 0.086222, 0.026125, 0.542658, 1568.6, 0.096379, 0.025165, 0.547103, 1960.8, 0.10598, 0.024309, 0.551368, 2352.9, 0.115124, 0.023556, 0.555468, 2745.1, 0.123903, 0.022878, 0.559423, 3137.2999999999997, 0.132381, 0.022258, 0.56325, 3529.4, 0.140603, 0.021687, 0.566959, 3921.6, 0.148607, 0.021154, 0.570562, 4313.7, 0.156421, 0.020651, 0.574065, 4705.9, 0.16407, 0.020171, 0.577478, 5098.0, 0.171574, 0.019706, 0.580806, 5490.2, 0.17895, 0.019252, 0.584054, 5882.400000000001, 0.186213, 0.018803, 0.587228, 6274.499999999999, 0.193374, 0.018354, 0.59033, 6666.700000000001, 0.200445, 0.017902, 0.593364, 7058.8, 0.207435, 0.017442, 0.596333, 7451.000000000001, 0.21435, 0.016973, 0.599239, 7843.1, 0.221197, 0.016497, 0.602083, 8235.3, 0.227983, 0.016007, 0.604867, 8627.5, 0.234715, 0.015502, 0.607592, 9019.6, 0.241396, 0.014979, 0.610259, 9411.8, 0.248032, 0.014439, 0.612868, 9803.9, 0.254627, 0.013882, 0.615419, 10196.1, 0.261183, 0.013308, 0.617911, 10588.2, 0.267703, 0.012716, 0.620346, 10980.4, 0.274191, 0.012109, 0.622722, 11372.5, 0.280648, 0.011488, 0.625038, 11764.7, 0.287076, 0.010855, 0.627295, 12156.9, 0.293478, 0.010213, 0.62949, 12548.999999999998, 0.299855, 0.009561, 0.631624, 12941.2, 0.30621, 0.008902, 0.633694, 13333.300000000001, 0.312543, 0.008239, 0.6357, 13725.499999999998, 0.318856, 0.007576, 0.63764, 14117.6, 0.32515, 0.006915, 0.639512, 14509.800000000001, 0.331426, 0.006261, 0.641316, 14902.000000000002, 0.337683, 0.005618, 0.643049, 15294.099999999999, 0.343925, 0.004991, 0.64471, 15686.300000000001, 0.35015, 0.004382, 0.646298, 16078.400000000001, 0.356359, 0.003798, 0.64781, 16470.6, 0.362553, 0.003243, 0.649245, 16862.7, 0.368733, 0.002724, 0.650601, 17254.9, 0.374897, 0.002245, 0.651876, 17647.1, 0.381047, 0.001814, 0.653068, 18039.2, 0.387183, 0.001434, 0.654177, 18431.4, 0.393304, 0.001114, 0.655199, 18823.5, 0.399411, 0.000859, 0.656133, 19215.7, 0.405503, 0.000678, 0.656977, 19607.8, 0.41158, 0.000577, 0.65773, 20000.0, 0.417642, 0.000564, 0.65839, 20392.2, 0.423689, 0.000646, 0.658956, 20784.3, 0.429719, 0.000831, 0.659425, 21176.5, 0.435734, 0.001127, 0.659797, 21568.6, 0.441732, 0.00154, 0.660069, 21960.8, 0.447714, 0.00208, 0.66024, 22352.9, 0.453677, 0.002755, 0.66031, 22745.1, 0.459623, 0.003574, 0.660277, 23137.3, 0.46555, 0.004545, 0.660139, 23529.4, 0.471457, 0.005678, 0.659897, 23921.600000000002, 0.477344, 0.00698, 0.659549, 24313.7, 0.48321, 0.00846, 0.659095, 24705.9, 0.489055, 0.010127, 0.658534, 25097.999999999996, 0.494877, 0.01199, 0.657865, 25490.2, 0.500678, 0.014055, 0.657088, 25882.4, 0.506454, 0.016333, 0.656202, 26274.5, 0.512206, 0.018833, 0.655209, 26666.699999999997, 0.517933, 0.021563, 0.654109, 27058.8, 0.523633, 0.024532, 0.652901, 27450.999999999996, 0.529306, 0.027747, 0.651586, 27843.1, 0.534952, 0.031217, 0.650165, 28235.300000000003, 0.54057, 0.03495, 0.64864, 28627.5, 0.546157, 0.038954, 0.64701, 29019.600000000002, 0.551715, 0.043136, 0.645277, 29411.8, 0.557243, 0.047331, 0.643443, 29803.9, 0.562738, 0.051545, 0.641509, 30196.1, 0.568201, 0.055778, 0.639477, 30588.199999999997, 0.573632, 0.060028, 0.637349, 30980.4, 0.579029, 0.064296, 0.635126, 31372.499999999996, 0.584391, 0.068579, 0.632812, 31764.7, 0.589719, 0.072878, 0.630408, 32156.899999999998, 0.595011, 0.07719, 0.627917, 32549.0, 0.600266, 0.081516, 0.625342, 32941.2, 0.605485, 0.085854, 0.622686, 33333.299999999996, 0.610667, 0.090204, 0.619951, 33725.5, 0.615812, 0.094564, 0.61714, 34117.6, 0.620919, 0.098934, 0.614257, 34509.8, 0.625987, 0.103312, 0.611305, 34902.0, 0.631017, 0.107699, 0.608287, 35294.1, 0.636008, 0.112092, 0.605205, 35686.299999999996, 0.640959, 0.116492, 0.602065, 36078.4, 0.645872, 0.120898, 0.598867, 36470.6, 0.650746, 0.125309, 0.595617, 36862.7, 0.65558, 0.129725, 0.592317, 37254.9, 0.660374, 0.134144, 0.588971, 37647.1, 0.665129, 0.138566, 0.585582, 38039.200000000004, 0.669845, 0.142992, 0.582154, 38431.4, 0.674522, 0.147419, 0.578688, 38823.5, 0.67916, 0.151848, 0.575189, 39215.7, 0.683758, 0.156278, 0.57166, 39607.799999999996, 0.688318, 0.160709, 0.568103, 40000.0, 0.69284, 0.165141, 0.564522, 40392.2, 0.697324, 0.169573, 0.560919, 40784.3, 0.701769, 0.174005, 0.557296, 41176.5, 0.706178, 0.178437, 0.553657, 41568.6, 0.710549, 0.182868, 0.550004, 41960.799999999996, 0.714883, 0.187299, 0.546338, 42352.9, 0.719181, 0.191729, 0.542663, 42745.100000000006, 0.723444, 0.196158, 0.538981, 43137.3, 0.72767, 0.200586, 0.535293, 43529.4, 0.731862, 0.205013, 0.531601, 43921.6, 0.736019, 0.209439, 0.527908, 44313.7, 0.740143, 0.213864, 0.524216, 44705.9, 0.744232, 0.218288, 0.520524, 45098.0, 0.748289, 0.222711, 0.516834, 45490.2, 0.752312, 0.227133, 0.513149, 45882.4, 0.756304, 0.231555, 0.509468, 46274.5, 0.760264, 0.235976, 0.505794, 46666.7, 0.764193, 0.240396, 0.502126, 47058.8, 0.76809, 0.244817, 0.498465, 47451.0, 0.771958, 0.249237, 0.494813, 47843.1, 0.775796, 0.253658, 0.491171, 48235.299999999996, 0.779604, 0.258078, 0.487539, 48627.5, 0.783383, 0.2625, 0.483918, 49019.6, 0.787133, 0.266922, 0.480307, 49411.8, 0.790855, 0.271345, 0.476706, 49803.9, 0.794549, 0.27577, 0.473117, 50196.1, 0.798216, 0.280197, 0.469538, 50588.200000000004, 0.801855, 0.284626, 0.465971, 50980.4, 0.805467, 0.289057, 0.462415, 51372.5, 0.809052, 0.293491, 0.45887, 51764.7, 0.812612, 0.297928, 0.455338, 52156.899999999994, 0.816144, 0.302368, 0.451816, 52549.0, 0.819651, 0.306812, 0.448306, 52941.2, 0.823132, 0.311261, 0.444806, 53333.299999999996, 0.826588, 0.315714, 0.441316, 53725.50000000001, 0.830018, 0.320172, 0.437836, 54117.6, 0.833422, 0.324635, 0.434366, 54509.799999999996, 0.836801, 0.329105, 0.430905, 54901.99999999999, 0.840155, 0.33358, 0.427455, 55294.1, 0.843484, 0.338062, 0.424013, 55686.3, 0.846788, 0.342551, 0.420579, 56078.399999999994, 0.850066, 0.347048, 0.417153, 56470.600000000006, 0.853319, 0.351553, 0.413734, 56862.7, 0.856547, 0.356066, 0.410322, 57254.899999999994, 0.85975, 0.360588, 0.406917, 57647.1, 0.862927, 0.365119, 0.403519, 58039.200000000004, 0.866078, 0.36966, 0.400126, 58431.4, 0.869203, 0.374212, 0.396738, 58823.49999999999, 0.872303, 0.378774, 0.393355, 59215.700000000004, 0.875376, 0.383347, 0.389976, 59607.8, 0.878423, 0.387932, 0.3866, 60000.0, 0.881443, 0.392529, 0.383229, 60392.2, 0.884436, 0.397139, 0.37986, 60784.3, 0.887402, 0.401762, 0.376494, 61176.5, 0.89034, 0.406398, 0.37313, 61568.6, 0.89325, 0.411048, 0.369768, 61960.8, 0.896131, 0.415712, 0.366407, 62352.9, 0.898984, 0.420392, 0.363047, 62745.1, 0.901807, 0.425087, 0.359688, 63137.299999999996, 0.904601, 0.429797, 0.356329, 63529.4, 0.907365, 0.434524, 0.35297, 63921.6, 0.910098, 0.439268, 0.34961, 64313.7, 0.9128, 0.444029, 0.346251, 64705.9, 0.915471, 0.448807, 0.34289, 65098.0, 0.918109, 0.453603, 0.339529, 65490.2, 0.920714, 0.458417, 0.336166, 65882.4, 0.923287, 0.463251, 0.332801, 66274.5, 0.925825, 0.468103, 0.329435, 66666.7, 0.928329, 0.472975, 0.326067, 67058.8, 0.930798, 0.477867, 0.322697, 67451.0, 0.933232, 0.48278, 0.319325, 67843.1, 0.93563, 0.487712, 0.315952, 68235.3, 0.93799, 0.492667, 0.312575, 68627.5, 0.940313, 0.497642, 0.309197, 69019.6, 0.942598, 0.502639, 0.305816, 69411.8, 0.944844, 0.507658, 0.302433, 69803.9, 0.947051, 0.512699, 0.299049, 70196.09999999999, 0.949217, 0.517763, 0.295662, 70588.2, 0.951344, 0.52285, 0.292275, 70980.4, 0.953428, 0.52796, 0.288883, 71372.5, 0.95547, 0.533093, 0.28549, 71764.7, 0.957469, 0.53825, 0.282096, 72156.90000000001, 0.959424, 0.543431, 0.278701, 72549.0, 0.961336, 0.548636, 0.275305, 72941.2, 0.963203, 0.553865, 0.271909, 73333.3, 0.965024, 0.559118, 0.268513, 73725.5, 0.966798, 0.564396, 0.265118, 74117.59999999999, 0.968526, 0.5697, 0.261721, 74509.8, 0.970205, 0.575028, 0.258325, 74902.0, 0.971835, 0.580382, 0.254931, 75294.09999999999, 0.973416, 0.585761, 0.25154, 75686.29999999999, 0.974947, 0.591165, 0.248151, 76078.40000000001, 0.976428, 0.596595, 0.244767, 76470.6, 0.977856, 0.602051, 0.241387, 76862.7, 0.979233, 0.607532, 0.238013, 77254.90000000001, 0.980556, 0.613039, 0.234646, 77647.1, 0.981826, 0.618572, 0.231287, 78039.2, 0.983041, 0.624131, 0.227937, 78431.4, 0.984199, 0.629718, 0.224595, 78823.5, 0.985301, 0.63533, 0.221265, 79215.7, 0.986345, 0.640969, 0.217948, 79607.79999999999, 0.987332, 0.646633, 0.214648, 80000.0, 0.98826, 0.652325, 0.211364, 80392.2, 0.989128, 0.658043, 0.2081, 80784.3, 0.989935, 0.663787, 0.204859, 81176.5, 0.990681, 0.669558, 0.201642, 81568.6, 0.991365, 0.675355, 0.198453, 81960.8, 0.991985, 0.681179, 0.195295, 82352.9, 0.992541, 0.68703, 0.19217, 82745.1, 0.993032, 0.692907, 0.189084, 83137.3, 0.993456, 0.69881, 0.186041, 83529.4, 0.993814, 0.704741, 0.183043, 83921.59999999999, 0.994103, 0.710698, 0.180097, 84313.7, 0.994324, 0.716681, 0.177208, 84705.9, 0.994474, 0.722691, 0.174381, 85098.0, 0.994553, 0.728728, 0.171622, 85490.20000000001, 0.994561, 0.734791, 0.168938, 85882.40000000001, 0.994495, 0.74088, 0.166335, 86274.5, 0.994355, 0.746995, 0.163821, 86666.7, 0.994141, 0.753137, 0.161404, 87058.8, 0.993851, 0.759304, 0.159092, 87451.0, 0.993482, 0.765499, 0.156891, 87843.09999999999, 0.993033, 0.77172, 0.154808, 88235.3, 0.992505, 0.777967, 0.152855, 88627.5, 0.991897, 0.784239, 0.151042, 89019.6, 0.991209, 0.790537, 0.149377, 89411.8, 0.990439, 0.796859, 0.14787, 89803.90000000001, 0.989587, 0.803205, 0.146529, 90196.1, 0.988648, 0.809579, 0.145357, 90588.2, 0.987621, 0.815978, 0.144363, 90980.4, 0.986509, 0.822401, 0.143557, 91372.5, 0.985314, 0.828846, 0.142945, 91764.7, 0.984031, 0.835315, 0.142528, 92156.9, 0.982653, 0.841812, 0.142303, 92549.0, 0.98119, 0.848329, 0.142279, 92941.2, 0.979644, 0.854866, 0.142453, 93333.3, 0.977995, 0.861432, 0.142808, 93725.5, 0.976265, 0.868016, 0.143351, 94117.6, 0.974443, 0.874622, 0.144061, 94509.8, 0.97253, 0.88125, 0.144923, 94902.0, 0.970533, 0.887896, 0.145919, 95294.1, 0.968443, 0.894564, 0.147014, 95686.3, 0.966271, 0.901249, 0.14818, 96078.4, 0.964021, 0.90795, 0.14937, 96470.59999999999, 0.961681, 0.914672, 0.15052, 96862.7, 0.959276, 0.921407, 0.151566, 97254.9, 0.956808, 0.928152, 0.152409, 97647.09999999999, 0.954287, 0.934908, 0.152921, 98039.2, 0.951726, 0.941671, 0.152925, 98431.40000000001, 0.949151, 0.948435, 0.152178, 98823.5, 0.946602, 0.95519, 0.150328, 99215.7, 0.944152, 0.961916, 0.146861, 99607.8, 0.941896, 0.96859, 0.140956, 100000.0, 0.940015, 0.975158, 0.131326]
	native_fieldstemperatureLUT.ShowDataHistogram = 1
	native_fieldstemperatureLUT.AutomaticDataHistogramComputation = 1
	native_fieldstemperatureLUT.NanColor = [0.0, 1.0, 0.0]
	native_fieldstemperatureLUT.ScalarRangeInitialized = 1.0

	# get opacity transfer function/opacity map for 'native_fieldstemperature'
	native_fieldstemperaturePWF = GetOpacityTransferFunction('native_fieldstemperature')
	native_fieldstemperaturePWF.Points = [0.0, 0.0, 0.5, 0.0, 3595.080322265625, 0.0, 0.5, 0.0, 100000.0, 1.0, 0.5, 0.0]
	native_fieldstemperaturePWF.ScalarRangeInitialized = 1

	# trace defaults for the display properties.
	resampleToImage1Display.Representation = 'Volume'
	resampleToImage1Display.ColorArrayName = ['POINTS', 'native_fields/temperature']
	resampleToImage1Display.LookupTable = native_fieldstemperatureLUT
	resampleToImage1Display.SelectTCoordArray = 'None'
	resampleToImage1Display.SelectNormalArray = 'None'
	resampleToImage1Display.SelectTangentArray = 'None'
	resampleToImage1Display.OSPRayScaleArray = 'native_fields/baryon_density'
	resampleToImage1Display.OSPRayScaleFunction = 'PiecewiseFunction'
	resampleToImage1Display.SelectOrientationVectors = 'None'
	resampleToImage1Display.ScaleFactor = 51.199948799999994
	resampleToImage1Display.SelectScaleArray = 'None'
	resampleToImage1Display.GlyphType = 'Arrow'
	resampleToImage1Display.GlyphTableIndexArray = 'None'
	resampleToImage1Display.GaussianRadius = 2.5599974399999996
	resampleToImage1Display.SetScaleArray = ['POINTS', 'native_fields/baryon_density']
	resampleToImage1Display.ScaleTransferFunction = 'PiecewiseFunction'
	resampleToImage1Display.OpacityArray = ['POINTS', 'native_fields/baryon_density']
	resampleToImage1Display.OpacityTransferFunction = 'PiecewiseFunction'
	resampleToImage1Display.DataAxesGrid = 'GridAxesRepresentation'
	resampleToImage1Display.PolarAxes = 'PolarAxesRepresentation'
	resampleToImage1Display.ScalarOpacityUnitDistance = 1.7354386040415883
	resampleToImage1Display.ScalarOpacityFunction = native_fieldstemperaturePWF
	resampleToImage1Display.OpacityArrayName = ['POINTS', 'native_fields/baryon_density']
	resampleToImage1Display.SliceFunction = 'Plane'
	resampleToImage1Display.Slice = 255

	# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
	resampleToImage1Display.ScaleTransferFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 28918.84765625, 1.0, 0.5, 0.0]

	# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
	resampleToImage1Display.OpacityTransferFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 28918.84765625, 1.0, 0.5, 0.0]

	# init the 'Plane' selected for 'SliceFunction'
	resampleToImage1Display.SliceFunction.Origin = [256.0, 256.0, 256.0]

	# setup the color legend parameters for each legend in this view

	# get color legend/bar for native_fieldstemperatureLUT in view renderView1
	native_fieldstemperatureLUTColorBar = GetScalarBar(native_fieldstemperatureLUT, renderView1)
	native_fieldstemperatureLUTColorBar.Position = [0.855, 0.015]
	native_fieldstemperatureLUTColorBar.Title = 'native_fields/temperature'
	native_fieldstemperatureLUTColorBar.ComponentTitle = ''
	native_fieldstemperatureLUTColorBar.TitleFontFamily = 'Courier'
	native_fieldstemperatureLUTColorBar.LabelFontFamily = 'Courier'
	native_fieldstemperatureLUTColorBar.TitleColor = (0, 0, 0)
	native_fieldstemperatureLUTColorBar.LabelColor = (0, 0, 0)
	native_fieldstemperatureLUTColorBar.AddRangeLabels = 0

	# set color bar visibility
	native_fieldstemperatureLUTColorBar.Visibility = 1

	# show color legend
	resampleToImage1Display.SetScalarBarVisibility(renderView1, True)

	SaveScreenshot(outputName, renderView1, ImageResolution=[800, 800], CompressionLevel='0')

	# ----------------------------------------------------------------
	# setup color maps and opacity mapes used in the visualization
	# note: the Get..() functions create a new object, if needed
	# ----------------------------------------------------------------

	# ----------------------------------------------------------------
	# restore active source
	SetActiveSource(resampleToImage1)
	# ----------------------------------------------------------------
	# setup the visualization in view 'renderView1'
	# ----------------------------------------------------------------


if __name__ == '__main__':
	print("filename:", sys.argv[1])
	print("registration name:", sys.argv[2])
	print("output filename:", sys.argv[3])

	saveScreenshot(sys.argv[1], sys.argv[2], sys.argv[3])

# if __name__ == '__main__':
#     # generate extracts
#     SaveExtracts(ExtractsOutputDirectory='extracts')
