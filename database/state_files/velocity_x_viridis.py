# state file generated using paraview version 5.10.1
import sys

# uncomment the following three lines to ensure this script works in future versions
#import paraview
#paraview.compatibility.major = 5
#paraview.compatibility.minor = 10

#### import the simple module from the paraview
from paraview.simple import *

def saveScreenshot(inputFilename, regName, outputName):   
	#### disable automatic camera reset on 'Show'
	paraview.simple._DisableFirstRenderCameraReset()

	# ----------------------------------------------------------------
	# setup views used in the visualization
	# ----------------------------------------------------------------

	# Create a new 'Render View'
	renderView1 = CreateView('RenderView')
	renderView1.ViewSize = [800, 800]
	renderView1.AxesGrid = 'GridAxes3DActor'
	renderView1.StereoType = 'Crystal Eyes'
	renderView1.CameraPosition = [256.0, -1457.1836768696405, 256.0]
	renderView1.CameraFocalPoint = [256.0, 256.0, 256.0]
	renderView1.CameraViewUp = [0.0, 0.0, 1.0]
	renderView1.CameraViewAngle = 21.916666666666668
	renderView1.CameraFocalDisk = 1.0
	renderView1.CameraParallelScale = 443.4045633326258
	renderView1.BackEnd = ''

	renderView1.Background = (1., 1., 1.)
	renderView1.UseColorPaletteForBackground = 0

	SetActiveView(None)

	# ----------------------------------------------------------------
	# setup view layouts
	# ----------------------------------------------------------------

	# create new layout object 'Layout #1'
	layout1 = CreateLayout(name='Layout #1')
	layout1.AssignView(0, renderView1)
	layout1.SetSize(800, 800)

	# ----------------------------------------------------------------
	# restore active view
	SetActiveView(renderView1)
	# ----------------------------------------------------------------

	# ----------------------------------------------------------------
	# setup the data processing pipelines
	# ----------------------------------------------------------------

	# create a new 'VisItPixieReader'
	nVB_C009_l10n512_S12345T692_z54h5 = VisItPixieReader(registrationName=regName, FileName=inputFilename)
	nVB_C009_l10n512_S12345T692_z54h5.Meshes = ['mesh_512x512x512']
	nVB_C009_l10n512_S12345T692_z54h5.CellArrays = ['native_fields/baryon_density', 'native_fields/dark_matter_density', 'native_fields/temperature', 'native_fields/velocity_x']

	# create a new 'Resample To Image'
	resampleToImage1 = ResampleToImage(registrationName='ResampleToImage1', Input=nVB_C009_l10n512_S12345T692_z54h5)
	resampleToImage1.SamplingDimensions = [512, 512, 512]
	resampleToImage1.SamplingBounds = [0.0, 512.0, 0.0, 512.0, 0.0, 512.0]

	# ----------------------------------------------------------------
	# setup the visualization in view 'renderView1'
	# ----------------------------------------------------------------

	# show data from resampleToImage1
	resampleToImage1Display = Show(resampleToImage1, renderView1, 'UniformGridRepresentation')

	# get color transfer function/color map for 'native_fieldsvelocity_x'
	native_fieldsvelocity_xLUT = GetColorTransferFunction('native_fieldsvelocity_x')
	native_fieldsvelocity_xLUT.RGBPoints = [-10000000.0, 0.267004, 0.004874, 0.329415, -9921560.0, 0.26851, 0.009605, 0.335427, -9843140.0, 0.269944, 0.014625, 0.341379, -9764700.0, 0.271305, 0.019942, 0.347269, -9686280.0, 0.272594, 0.025563, 0.353093, -9607840.0, 0.273809, 0.031497, 0.358853, -9529420.0, 0.274952, 0.037752, 0.364543, -9450980.0, 0.276022, 0.044167, 0.370164, -9372540.0, 0.277018, 0.050344, 0.375715, -9294120.0, 0.277941, 0.056324, 0.381191, -9215680.0, 0.278791, 0.062145, 0.386592, -9137260.0, 0.279566, 0.067836, 0.391917, -9058820.0, 0.280267, 0.073417, 0.397163, -8980400.0, 0.280894, 0.078907, 0.402329, -8901960.0, 0.281446, 0.08432, 0.407414, -8823520.0, 0.281924, 0.089666, 0.412415, -8745100.0, 0.282327, 0.094955, 0.417331, -8666660.0, 0.282656, 0.100196, 0.42216, -8588240.0, 0.28291, 0.105393, 0.426902, -8509800.0, 0.283091, 0.110553, 0.431554, -8431380.0, 0.283197, 0.11568, 0.436115, -8352940.0, 0.283229, 0.120777, 0.440584, -8274500.0, 0.283187, 0.125848, 0.44496, -8196080.0, 0.283072, 0.130895, 0.449241, -8117640.0, 0.282884, 0.13592, 0.453427, -8039220.0, 0.282623, 0.140926, 0.457517, -7960780.0, 0.28229, 0.145912, 0.46151, -7882360.0, 0.281887, 0.150881, 0.465405, -7803920.0, 0.281412, 0.155834, 0.469201, -7725500.0, 0.280868, 0.160771, 0.472899, -7647060.0, 0.280255, 0.165693, 0.476498, -7568620.0, 0.279574, 0.170599, 0.479997, -7490200.0, 0.278826, 0.17549, 0.483397, -7411760.0, 0.278012, 0.180367, 0.486697, -7333340.0, 0.277134, 0.185228, 0.489898, -7254900.0, 0.276194, 0.190074, 0.493001, -7176480.0, 0.275191, 0.194905, 0.496005, -7098040.0, 0.274128, 0.199721, 0.498911, -7019600.0, 0.273006, 0.20452, 0.501721, -6941180.0, 0.271828, 0.209303, 0.504434, -6862740.0, 0.270595, 0.214069, 0.507052, -6784320.0, 0.269308, 0.218818, 0.509577, -6705880.0, 0.267968, 0.223549, 0.512008, -6627460.0, 0.26658, 0.228262, 0.514349, -6549020.0, 0.265145, 0.232956, 0.516599, -6470580.0, 0.263663, 0.237631, 0.518762, -6392160.0, 0.262138, 0.242286, 0.520837, -6313720.0, 0.260571, 0.246922, 0.522828, -6235300.0, 0.258965, 0.251537, 0.524736, -6156860.0, 0.257322, 0.25613, 0.526563, -6078440.0, 0.255645, 0.260703, 0.528312, -6000000.0, 0.253935, 0.265254, 0.529983, -5921560.0, 0.252194, 0.269783, 0.531579, -5843140.0, 0.250425, 0.27429, 0.533103, -5764700.0, 0.248629, 0.278775, 0.534556, -5686280.0, 0.246811, 0.283237, 0.535941, -5607840.0, 0.244972, 0.287675, 0.53726, -5529420.0, 0.243113, 0.292092, 0.538516, -5450980.0, 0.241237, 0.296485, 0.539709, -5372540.0, 0.239346, 0.300855, 0.540844, -5294120.0, 0.237441, 0.305202, 0.541921, -5215680.0, 0.235526, 0.309527, 0.542944, -5137260.0, 0.233603, 0.313828, 0.543914, -5058820.0, 0.231674, 0.318106, 0.544834, -4980400.0, 0.229739, 0.322361, 0.545706, -4901960.0, 0.227802, 0.326594, 0.546532, -4823520.0, 0.225863, 0.330805, 0.547314, -4745100.0, 0.223925, 0.334994, 0.548053, -4666660.0, 0.221989, 0.339161, 0.548752, -4588240.0, 0.220057, 0.343307, 0.549413, -4509800.000000001, 0.21813, 0.347432, 0.550038, -4431380.0, 0.21621, 0.351535, 0.550627, -4352940.0, 0.214298, 0.355619, 0.551184, -4274500.0, 0.212395, 0.359683, 0.55171, -4196080.0, 0.210503, 0.363727, 0.552206, -4117640.0, 0.208623, 0.367752, 0.552675, -4039220.0, 0.206756, 0.371758, 0.553117, -3960780.0, 0.204903, 0.375746, 0.553533, -3882360.0, 0.203063, 0.379716, 0.553925, -3803919.999999999, 0.201239, 0.38367, 0.554294, -3725500.000000001, 0.19943, 0.387607, 0.554642, -3647060.0, 0.197636, 0.391528, 0.554969, -3568620.0, 0.19586, 0.395433, 0.555276, -3490200.0, 0.1941, 0.399323, 0.555565, -3411760.0, 0.192357, 0.403199, 0.555836, -3333340.0, 0.190631, 0.407061, 0.556089, -3254899.999999999, 0.188923, 0.41091, 0.556326, -3176480.0, 0.187231, 0.414746, 0.556547, -3098040.0, 0.185556, 0.41857, 0.556753, -3019600.0, 0.183898, 0.422383, 0.556944, -2941180.0, 0.182256, 0.426184, 0.55712, -2862740.0, 0.180629, 0.429975, 0.557282, -2784320.0, 0.179019, 0.433756, 0.55743, -2705880.000000001, 0.177423, 0.437527, 0.557565, -2627460.0, 0.175841, 0.44129, 0.557685, -2549020.0, 0.174274, 0.445044, 0.557792, -2470580.0, 0.172719, 0.448791, 0.557885, -2392160.0, 0.171176, 0.45253, 0.557965, -2313720.0, 0.169646, 0.456262, 0.55803, -2235300.0, 0.168126, 0.459988, 0.558082, -2156860.0, 0.166617, 0.463708, 0.558119, -2078440.0, 0.165117, 0.467423, 0.558141, -2000000.0, 0.163625, 0.471133, 0.558148, -1921560.0, 0.162142, 0.474838, 0.55814, -1843140.0, 0.160665, 0.47854, 0.558115, -1764700.0, 0.159194, 0.482237, 0.558073, -1686280.0, 0.157729, 0.485932, 0.558013, -1607840.0, 0.15627, 0.489624, 0.557936, -1529420.0, 0.154815, 0.493313, 0.55784, -1450980.0, 0.153364, 0.497, 0.557724, -1372540.0, 0.151918, 0.500685, 0.557587, -1294120.0, 0.150476, 0.504369, 0.55743, -1215680.0, 0.149039, 0.508051, 0.55725, -1137260.0, 0.147607, 0.511733, 0.557049, -1058820.0, 0.14618, 0.515413, 0.556823, -980400.0, 0.144759, 0.519093, 0.556572, -901960.0, 0.143343, 0.522773, 0.556295, -823520.0, 0.141935, 0.526453, 0.555991, -745100.0, 0.140536, 0.530132, 0.555659, -666660.0, 0.139147, 0.533812, 0.555298, -588240.0, 0.13777, 0.537492, 0.554906, -509800.0, 0.136408, 0.541173, 0.554483, -431380.0, 0.135066, 0.544853, 0.554029, -352940.0, 0.133743, 0.548535, 0.553541, -274500.0, 0.132444, 0.552216, 0.553018, -196080.0, 0.131172, 0.555899, 0.552459, -117640.0, 0.129933, 0.559582, 0.551864, -39220.0, 0.128729, 0.563265, 0.551229, 39220.0, 0.127568, 0.566949, 0.550556, 117640.00000000186, 0.126453, 0.570633, 0.549841, 196080.0, 0.125394, 0.574318, 0.549086, 274500.0, 0.124395, 0.578002, 0.548287, 352940.0, 0.123463, 0.581687, 0.547445, 431379.99999999814, 0.122606, 0.585371, 0.546557, 509800.0, 0.121831, 0.589055, 0.545623, 588240.0, 0.121148, 0.592739, 0.544641, 666659.9999999981, 0.120565, 0.596422, 0.543611, 745100.0, 0.120092, 0.600104, 0.54253, 823520.0, 0.119738, 0.603785, 0.5414, 901960.0, 0.119512, 0.607464, 0.540218, 980399.9999999981, 0.119423, 0.611141, 0.538982, 1058820.0, 0.119483, 0.614817, 0.537692, 1137260.0, 0.119699, 0.61849, 0.536347, 1215679.9999999981, 0.120081, 0.622161, 0.534946, 1294120.0, 0.120638, 0.625828, 0.533488, 1372540.0, 0.12138, 0.629492, 0.531973, 1450980.0, 0.122312, 0.633153, 0.530398, 1529420.0, 0.123444, 0.636809, 0.528763, 1607840.0, 0.12478, 0.640461, 0.527068, 1686280.0, 0.126326, 0.644107, 0.525311, 1764699.9999999981, 0.128087, 0.647749, 0.523491, 1843140.0, 0.130067, 0.651384, 0.521608, 1921560.0, 0.132268, 0.655014, 0.519661, 2000000.0, 0.134692, 0.658636, 0.517649, 2078440.0, 0.137339, 0.662252, 0.515571, 2156860.0, 0.14021, 0.665859, 0.513427, 2235300.0, 0.143303, 0.669459, 0.511215, 2313720.0, 0.146616, 0.67305, 0.508936, 2392160.000000002, 0.150148, 0.676631, 0.506589, 2470580.0, 0.153894, 0.680203, 0.504172, 2549020.0, 0.157851, 0.683765, 0.501686, 2627460.0, 0.162016, 0.687316, 0.499129, 2705880.0, 0.166383, 0.690856, 0.496502, 2784320.0, 0.170948, 0.694384, 0.493803, 2862740.0, 0.175707, 0.6979, 0.491033, 2941180.000000002, 0.180653, 0.701402, 0.488189, 3019600.0, 0.185783, 0.704891, 0.485273, 3098040.0, 0.19109, 0.708366, 0.482284, 3176480.0, 0.196571, 0.711827, 0.479221, 3254900.0, 0.202219, 0.715272, 0.476084, 3333340.0, 0.20803, 0.718701, 0.472873, 3411760.0, 0.214, 0.722114, 0.469588, 3490200.000000002, 0.220124, 0.725509, 0.466226, 3568620.0, 0.226397, 0.728888, 0.462789, 3647060.0, 0.232815, 0.732247, 0.459277, 3725500.0, 0.239374, 0.735588, 0.455688, 3803920.0, 0.24607, 0.73891, 0.452024, 3882360.0, 0.252899, 0.742211, 0.448284, 3960780.0, 0.259857, 0.745492, 0.444467, 4039219.999999998, 0.266941, 0.748751, 0.440573, 4117640.0, 0.274149, 0.751988, 0.436601, 4196080.0, 0.281477, 0.755203, 0.432552, 4274500.000000002, 0.288921, 0.758394, 0.428426, 4352940.0, 0.296479, 0.761561, 0.424223, 4431380.0, 0.304148, 0.764704, 0.419943, 4509800.0, 0.311925, 0.767822, 0.415586, 4588239.999999998, 0.319809, 0.770914, 0.411152, 4666660.0, 0.327796, 0.77398, 0.40664, 4745100.0, 0.335885, 0.777018, 0.402049, 4823519.999999998, 0.344074, 0.780029, 0.397381, 4901960.0, 0.35236, 0.783011, 0.392636, 4980400.0, 0.360741, 0.785964, 0.387814, 5058820.0, 0.369214, 0.788888, 0.382914, 5137259.999999998, 0.377779, 0.791781, 0.377939, 5215680.0, 0.386433, 0.794644, 0.372886, 5294120.0, 0.395174, 0.797475, 0.367757, 5372539.999999998, 0.404001, 0.800275, 0.362552, 5450980.0, 0.412913, 0.803041, 0.357269, 5529420.0, 0.421908, 0.805774, 0.35191, 5607840.0, 0.430983, 0.808473, 0.346476, 5686280.0, 0.440137, 0.811138, 0.340967, 5764700.0, 0.449368, 0.813768, 0.335384, 5843140.0, 0.458674, 0.816363, 0.329727, 5921559.999999998, 0.468053, 0.818921, 0.323998, 6000000.0, 0.477504, 0.821444, 0.318195, 6078440.0, 0.487026, 0.823929, 0.312321, 6156860.0, 0.496615, 0.826376, 0.306377, 6235300.0, 0.506271, 0.828786, 0.300362, 6313720.0, 0.515992, 0.831158, 0.294279, 6392160.0, 0.525776, 0.833491, 0.288127, 6470580.0, 0.535621, 0.835785, 0.281908, 6549020.000000002, 0.545524, 0.838039, 0.275626, 6627460.0, 0.555484, 0.840254, 0.269281, 6705880.0, 0.565498, 0.84243, 0.262877, 6784320.0, 0.575563, 0.844566, 0.256415, 6862740.0, 0.585678, 0.846661, 0.249897, 6941180.0, 0.595839, 0.848717, 0.243329, 7019600.0, 0.606045, 0.850733, 0.236712, 7098040.0, 0.616293, 0.852709, 0.230052, 7176480.0, 0.626579, 0.854645, 0.223353, 7254900.0, 0.636902, 0.856542, 0.21662, 7333340.0, 0.647257, 0.8584, 0.209861, 7411760.0, 0.657642, 0.860219, 0.203082, 7490200.0, 0.668054, 0.861999, 0.196293, 7568620.0, 0.678489, 0.863742, 0.189503, 7647060.0, 0.688944, 0.865448, 0.182725, 7725500.0, 0.699415, 0.867117, 0.175971, 7803920.0, 0.709898, 0.868751, 0.169257, 7882360.0, 0.720391, 0.87035, 0.162603, 7960780.0, 0.730889, 0.871916, 0.156029, 8039220.0, 0.741388, 0.873449, 0.149561, 8117640.0, 0.751884, 0.874951, 0.143228, 8196080.0, 0.762373, 0.876424, 0.137064, 8274500.0, 0.772852, 0.877868, 0.131109, 8352940.0, 0.783315, 0.879285, 0.125405, 8431380.0, 0.79376, 0.880678, 0.120005, 8509800.0, 0.804182, 0.882046, 0.114965, 8588240.0, 0.814576, 0.883393, 0.110347, 8666660.0, 0.82494, 0.88472, 0.106217, 8745100.0, 0.83527, 0.886029, 0.102646, 8823520.0, 0.845561, 0.887322, 0.099702, 8901960.0, 0.85581, 0.888601, 0.097452, 8980400.0, 0.866013, 0.889868, 0.095953, 9058820.0, 0.876168, 0.891125, 0.09525, 9137260.0, 0.886271, 0.892374, 0.095374, 9215680.0, 0.89632, 0.893616, 0.096335, 9294120.0, 0.906311, 0.894855, 0.098125, 9372540.0, 0.916242, 0.896091, 0.100717, 9450980.0, 0.926106, 0.89733, 0.104071, 9529420.0, 0.935904, 0.89857, 0.108131, 9607840.0, 0.945636, 0.899815, 0.112838, 9686280.0, 0.9553, 0.901065, 0.118128, 9764700.0, 0.964894, 0.902323, 0.123941, 9843140.0, 0.974417, 0.90359, 0.130215, 9921560.0, 0.983868, 0.904867, 0.136897, 10000000.0, 0.993248, 0.906157, 0.143936]
	native_fieldsvelocity_xLUT.NanColor = [1.0, 0.0, 0.0]
	native_fieldsvelocity_xLUT.ScalarRangeInitialized = 1.0

	# get opacity transfer function/opacity map for 'native_fieldsvelocity_x'
	native_fieldsvelocity_xPWF = GetOpacityTransferFunction('native_fieldsvelocity_x')
	native_fieldsvelocity_xPWF.Points = [-10000000.0, 0.0, 0.5, 0.0, 10000000.0, 1.0, 0.5, 0.0]
	native_fieldsvelocity_xPWF.ScalarRangeInitialized = 1

	# trace defaults for the display properties.
	resampleToImage1Display.Representation = 'Volume'
	resampleToImage1Display.ColorArrayName = ['POINTS', 'native_fields/velocity_x']
	resampleToImage1Display.LookupTable = native_fieldsvelocity_xLUT
	resampleToImage1Display.SelectTCoordArray = 'None'
	resampleToImage1Display.SelectNormalArray = 'None'
	resampleToImage1Display.SelectTangentArray = 'None'
	resampleToImage1Display.OSPRayScaleArray = 'native_fields/baryon_density'
	resampleToImage1Display.OSPRayScaleFunction = 'PiecewiseFunction'
	resampleToImage1Display.SelectOrientationVectors = 'None'
	resampleToImage1Display.ScaleFactor = 51.199948799999994
	resampleToImage1Display.SelectScaleArray = 'None'
	resampleToImage1Display.GlyphType = 'Arrow'
	resampleToImage1Display.GlyphTableIndexArray = 'None'
	resampleToImage1Display.GaussianRadius = 2.5599974399999996
	resampleToImage1Display.SetScaleArray = ['POINTS', 'native_fields/baryon_density']
	resampleToImage1Display.ScaleTransferFunction = 'PiecewiseFunction'
	resampleToImage1Display.OpacityArray = ['POINTS', 'native_fields/baryon_density']
	resampleToImage1Display.OpacityTransferFunction = 'PiecewiseFunction'
	resampleToImage1Display.DataAxesGrid = 'GridAxesRepresentation'
	resampleToImage1Display.PolarAxes = 'PolarAxesRepresentation'
	resampleToImage1Display.ScalarOpacityUnitDistance = 1.7354386040415883
	resampleToImage1Display.ScalarOpacityFunction = native_fieldsvelocity_xPWF
	resampleToImage1Display.OpacityArrayName = ['POINTS', 'native_fields/baryon_density']
	resampleToImage1Display.SliceFunction = 'Plane'
	resampleToImage1Display.Slice = 255

	# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
	resampleToImage1Display.ScaleTransferFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 28918.84765625, 1.0, 0.5, 0.0]

	# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
	resampleToImage1Display.OpacityTransferFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 28918.84765625, 1.0, 0.5, 0.0]

	# init the 'Plane' selected for 'SliceFunction'
	resampleToImage1Display.SliceFunction.Origin = [256.0, 256.0, 256.0]

	# setup the color legend parameters for each legend in this view

	# get color legend/bar for native_fieldsvelocity_xLUT in view renderView1
	native_fieldsvelocity_xLUTColorBar = GetScalarBar(native_fieldsvelocity_xLUT, renderView1)
	native_fieldsvelocity_xLUTColorBar.Title = 'native_fields/velocity_x'
	native_fieldsvelocity_xLUTColorBar.ComponentTitle = ''
	native_fieldsvelocity_xLUTColorBar.TitleFontFamily = 'Courier'
	native_fieldsvelocity_xLUTColorBar.LabelFontFamily = 'Courier'
	native_fieldsvelocity_xLUTColorBar.TitleColor = (0, 0, 0)
	native_fieldsvelocity_xLUTColorBar.LabelColor = (0, 0, 0)
	native_fieldsvelocity_xLUTColorBar.AddRangeLabels = 0

	# set color bar visibility
	native_fieldsvelocity_xLUTColorBar.Visibility = 1

	# show color legend
	resampleToImage1Display.SetScalarBarVisibility(renderView1, True)

	SaveScreenshot(outputName, renderView1, ImageResolution=[800, 800], CompressionLevel='0')

	# ----------------------------------------------------------------
	# setup color maps and opacity mapes used in the visualization
	# note: the Get..() functions create a new object, if needed
	# ----------------------------------------------------------------

	# ----------------------------------------------------------------
	# restore active source
	SetActiveSource(resampleToImage1)
	# ----------------------------------------------------------------

if __name__ == '__main__':
	print("filename:", sys.argv[1])
	print("registration name:", sys.argv[2])
	print("output filename:", sys.argv[3])

	saveScreenshot(sys.argv[1], sys.argv[2], sys.argv[3])

# if __name__ == '__main__':
#     # generate extracts
#     SaveExtracts(ExtractsOutputDirectory='extracts')