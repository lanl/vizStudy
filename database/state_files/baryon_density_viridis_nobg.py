# state file generated using paraview version 5.10.1
import sys

# uncomment the following three lines to ensure this script works in future versions
#import paraview
#paraview.compatibility.major = 5
#paraview.compatibility.minor = 10

#### import the simple module from the paraview
from paraview.simple import *

def saveScreenshot(inputFilename, regName, outputName):   
	#### disable automatic camera reset on 'Show'
	paraview.simple._DisableFirstRenderCameraReset()

	# ----------------------------------------------------------------
	# setup views used in the visualization
	# ----------------------------------------------------------------

	# Create a new 'Render View'
	renderView1 = CreateView('RenderView')
	renderView1.ViewSize = [800, 800]
	renderView1.AxesGrid = 'GridAxes3DActor'
	renderView1.StereoType = 'Crystal Eyes'
	renderView1.CameraPosition = [256.0, -1457.1836768696405, 256.0]
	renderView1.CameraFocalPoint = [256.0, 256.0, 256.0]
	renderView1.CameraViewUp = [0.0, 0.0, 1.0]
	renderView1.CameraViewAngle = 21.916666666666668
	renderView1.CameraFocalDisk = 1.0
	renderView1.CameraParallelScale = 443.4045633326258
	renderView1.BackEnd = ''

	renderView1.Background = (1., 1., 1.)
	renderView1.UseColorPaletteForBackground = 0

	SetActiveView(None)

	# ----------------------------------------------------------------
	# setup view layouts
	# ----------------------------------------------------------------

	# create new layout object 'Layout #1'
	layout1 = CreateLayout(name='Layout #1')
	layout1.AssignView(0, renderView1)
	layout1.SetSize(800, 800)

	# ----------------------------------------------------------------
	# restore active view
	SetActiveView(renderView1)
	# ----------------------------------------------------------------

	# ----------------------------------------------------------------
	# setup the data processing pipelines
	# ----------------------------------------------------------------

	# create a new 'VisItPixieReader'
	nVB_C009_l10n512_S12345T692_z54h5 = VisItPixieReader(registrationName=regName, FileName=inputFilename)
	nVB_C009_l10n512_S12345T692_z54h5.Meshes = ['mesh_512x512x512']
	nVB_C009_l10n512_S12345T692_z54h5.CellArrays = ['native_fields/baryon_density', 'native_fields/dark_matter_density', 'native_fields/temperature', 'native_fields/velocity_x']

	# create a new 'Resample To Image'
	resampleToImage2 = ResampleToImage(registrationName='ResampleToImage1', Input=nVB_C009_l10n512_S12345T692_z54h5)
	resampleToImage2.SamplingDimensions = [512, 512, 512]
	resampleToImage2.SamplingBounds = [0.0, 512.0, 0.0, 512.0, 0.0, 512.0]

	# ----------------------------------------------------------------
	# setup the visualization in view 'renderView1'
	# ----------------------------------------------------------------

	# show data from resampleToImage2
	resampleToImage2Display = Show(resampleToImage2, renderView1, 'UniformGridRepresentation')

	# get color transfer function/color map for 'native_fieldsbaryon_density'
	native_fieldsbaryon_densityLUT = GetColorTransferFunction('native_fieldsbaryon_density')
	native_fieldsbaryon_densityLUT.AutomaticRescaleRangeMode = 'Never'
	native_fieldsbaryon_densityLUT.RGBPoints = [0.06377197802066803, 0.267004, 0.004874, 0.329415, 2.024521864322871, 0.26851, 0.009605, 0.335427, 3.9847718143970514, 0.269944, 0.014625, 0.341379, 5.9455217006992545, 0.271305, 0.019942, 0.347269, 7.905771650773435, 0.272594, 0.025563, 0.353093, 9.86652153707564, 0.273809, 0.031497, 0.358853, 11.82677148714982, 0.274952, 0.037752, 0.364543, 13.787521373452023, 0.276022, 0.044167, 0.370164, 15.748271259754224, 0.277018, 0.050344, 0.375715, 17.708521209828405, 0.277941, 0.056324, 0.381191, 19.66927109613061, 0.278791, 0.062145, 0.386592, 21.62952104620479, 0.279566, 0.067836, 0.391917, 23.590270932506993, 0.280267, 0.073417, 0.397163, 25.55052088258117, 0.280894, 0.078907, 0.402329, 27.511270768883378, 0.281446, 0.08432, 0.407414, 29.47202065518558, 0.281924, 0.089666, 0.412415, 31.43227060525976, 0.282327, 0.094955, 0.417331, 33.39302049156197, 0.282656, 0.100196, 0.42216, 35.35327044163614, 0.28291, 0.105393, 0.426902, 37.31402032793835, 0.283091, 0.110553, 0.431554, 39.27427027801253, 0.283197, 0.11568, 0.436115, 41.23502016431473, 0.283229, 0.120777, 0.440584, 43.195770050616936, 0.283187, 0.125848, 0.44496, 45.156020000691115, 0.283072, 0.130895, 0.449241, 47.11676988699332, 0.282884, 0.13592, 0.453427, 49.0770198370675, 0.282623, 0.140926, 0.457517, 51.0377697233697, 0.28229, 0.145912, 0.46151, 52.998019673443885, 0.281887, 0.150881, 0.465405, 54.95876955974609, 0.281412, 0.155834, 0.469201, 56.919019509820274, 0.280868, 0.160771, 0.472899, 58.87976939612247, 0.280255, 0.165693, 0.476498, 60.84051928242467, 0.279574, 0.170599, 0.479997, 62.80076923249885, 0.278826, 0.17549, 0.483397, 64.76151911880106, 0.278012, 0.180367, 0.486697, 66.72176906887525, 0.277134, 0.185228, 0.489898, 68.68251895517743, 0.276194, 0.190074, 0.493001, 70.64276890525161, 0.275191, 0.194905, 0.496005, 72.60351879155382, 0.274128, 0.199721, 0.498911, 74.56426867785603, 0.273006, 0.20452, 0.501721, 76.5245186279302, 0.271828, 0.209303, 0.504434, 78.48526851423242, 0.270595, 0.214069, 0.507052, 80.4455184643066, 0.269308, 0.218818, 0.509577, 82.4062683506088, 0.267968, 0.223549, 0.512008, 84.36651830068297, 0.26658, 0.228262, 0.514349, 86.32726818698518, 0.265145, 0.232956, 0.516599, 88.28801807328738, 0.263663, 0.237631, 0.518762, 90.24826802336156, 0.262138, 0.242286, 0.520837, 92.20901790966377, 0.260571, 0.246922, 0.522828, 94.16926785973796, 0.258965, 0.251537, 0.524736, 96.13001774604015, 0.257322, 0.25613, 0.526563, 98.09026769611434, 0.255645, 0.260703, 0.528312, 100.05101758241653, 0.253935, 0.265254, 0.529983, 102.01176746871873, 0.252194, 0.269783, 0.531579, 103.97201741879292, 0.250425, 0.27429, 0.533103, 105.93276730509513, 0.248629, 0.278775, 0.534556, 107.8930172551693, 0.246811, 0.283237, 0.535941, 109.85376714147151, 0.244972, 0.287675, 0.53726, 111.8140170915457, 0.243113, 0.292092, 0.538516, 113.77476697784789, 0.241237, 0.296485, 0.539709, 115.73551686415009, 0.239346, 0.300855, 0.540844, 117.69576681422427, 0.237441, 0.305202, 0.541921, 119.65651670052648, 0.235526, 0.309527, 0.542944, 121.61676665060065, 0.233603, 0.313828, 0.543914, 123.57751653690286, 0.231674, 0.318106, 0.544834, 125.53776648697703, 0.229739, 0.322361, 0.545706, 127.49851637327926, 0.227802, 0.326594, 0.546532, 129.45926625958145, 0.225863, 0.330805, 0.547314, 131.41951620965563, 0.223925, 0.334994, 0.548053, 133.38026609595784, 0.221989, 0.339161, 0.548752, 135.340516046032, 0.220057, 0.343307, 0.549413, 137.3012659323342, 0.21813, 0.347432, 0.550038, 139.2615158824084, 0.21621, 0.351535, 0.550627, 141.2222657687106, 0.214298, 0.355619, 0.551184, 143.1830156550128, 0.212395, 0.359683, 0.55171, 145.14326560508698, 0.210503, 0.363727, 0.552206, 147.1040154913892, 0.208623, 0.367752, 0.552675, 149.06426544146336, 0.206756, 0.371758, 0.553117, 151.02501532776557, 0.204903, 0.375746, 0.553533, 152.98526527783974, 0.203063, 0.379716, 0.553925, 154.94601516414195, 0.201239, 0.38367, 0.554294, 156.90626511421613, 0.19943, 0.387607, 0.554642, 158.86701500051834, 0.197636, 0.391528, 0.554969, 160.82776488682055, 0.19586, 0.395433, 0.555276, 162.78801483689472, 0.1941, 0.399323, 0.555565, 164.74876472319693, 0.192357, 0.403199, 0.555836, 166.7090146732711, 0.190631, 0.407061, 0.556089, 168.6697645595733, 0.188923, 0.41091, 0.556326, 170.63001450964748, 0.187231, 0.414746, 0.556547, 172.5907643959497, 0.185556, 0.41857, 0.556753, 174.5515142822519, 0.183898, 0.422383, 0.556944, 176.51176423232607, 0.182256, 0.426184, 0.55712, 178.47251411862828, 0.180629, 0.429975, 0.557282, 180.43276406870245, 0.179019, 0.433756, 0.55743, 182.39351395500464, 0.177423, 0.437527, 0.557565, 184.35376390507884, 0.175841, 0.44129, 0.557685, 186.31451379138105, 0.174274, 0.445044, 0.557792, 188.27526367768326, 0.172719, 0.448791, 0.557885, 190.23551362775743, 0.171176, 0.45253, 0.557965, 192.19626351405964, 0.169646, 0.456262, 0.55803, 194.1565134641338, 0.168126, 0.459988, 0.558082, 196.11726335043602, 0.166617, 0.463708, 0.558119, 198.0775133005102, 0.165117, 0.467423, 0.558141, 200.0382631868124, 0.163625, 0.471133, 0.558148, 201.9990130731146, 0.162142, 0.474838, 0.55814, 203.95926302318878, 0.160665, 0.47854, 0.558115, 205.920012909491, 0.159194, 0.482237, 0.558073, 207.88026285956516, 0.157729, 0.485932, 0.558013, 209.84101274586737, 0.15627, 0.489624, 0.557936, 211.80126269594155, 0.154815, 0.493313, 0.55784, 213.76201258224376, 0.153364, 0.497, 0.557724, 215.72276246854597, 0.151918, 0.500685, 0.557587, 217.68301241862014, 0.150476, 0.504369, 0.55743, 219.64376230492235, 0.149039, 0.508051, 0.55725, 221.60401225499652, 0.147607, 0.511733, 0.557049, 223.56476214129873, 0.14618, 0.515413, 0.556823, 225.5250120913729, 0.144759, 0.519093, 0.556572, 227.4857619776751, 0.143343, 0.522773, 0.556295, 229.44651186397732, 0.141935, 0.526453, 0.555991, 231.4067618140515, 0.140536, 0.530132, 0.555659, 233.3675117003537, 0.139147, 0.533812, 0.555298, 235.32776165042787, 0.13777, 0.537492, 0.554906, 237.28851153673008, 0.136408, 0.541173, 0.554483, 239.24876148680426, 0.135066, 0.544853, 0.554029, 241.20951137310647, 0.133743, 0.548535, 0.553541, 243.17026125940868, 0.132444, 0.552216, 0.553018, 245.13051120948285, 0.131172, 0.555899, 0.552459, 247.09126109578506, 0.129933, 0.559582, 0.551864, 249.05151104585923, 0.128729, 0.563265, 0.551229, 251.01226093216144, 0.127568, 0.566949, 0.550556, 252.97251088223564, 0.126453, 0.570633, 0.549841, 254.93326076853785, 0.125394, 0.574318, 0.549086, 256.893510718612, 0.124395, 0.578002, 0.548287, 258.8542606049142, 0.123463, 0.581687, 0.547445, 260.81501049121636, 0.122606, 0.585371, 0.546557, 262.7752604412906, 0.121831, 0.589055, 0.545623, 264.7360103275928, 0.121148, 0.592739, 0.544641, 266.69626027766697, 0.120565, 0.596422, 0.543611, 268.6570101639692, 0.120092, 0.600104, 0.54253, 270.61726011404335, 0.119738, 0.603785, 0.5414, 272.57801000034556, 0.119512, 0.607464, 0.540218, 274.5387598866477, 0.119423, 0.611141, 0.538982, 276.49900983672194, 0.119483, 0.614817, 0.537692, 278.45975972302415, 0.119699, 0.61849, 0.536347, 280.4200096730983, 0.120081, 0.622161, 0.534946, 282.38075955940053, 0.120638, 0.625828, 0.533488, 284.3410095094747, 0.12138, 0.629492, 0.531973, 286.3017593957769, 0.122312, 0.633153, 0.530398, 288.26250928207907, 0.123444, 0.636809, 0.528763, 290.2227592321533, 0.12478, 0.640461, 0.527068, 292.1835091184555, 0.126326, 0.644107, 0.525311, 294.1437590685297, 0.128087, 0.647749, 0.523491, 296.1045089548319, 0.130067, 0.651384, 0.521608, 298.06475890490606, 0.132268, 0.655014, 0.519661, 300.02550879120827, 0.134692, 0.658636, 0.517649, 301.9862586775105, 0.137339, 0.662252, 0.515571, 303.94650862758465, 0.14021, 0.665859, 0.513427, 305.90725851388686, 0.143303, 0.669459, 0.511215, 307.86750846396103, 0.146616, 0.67305, 0.508936, 309.82825835026324, 0.150148, 0.676631, 0.506589, 311.7885083003374, 0.153894, 0.680203, 0.504172, 313.7492581866396, 0.157851, 0.683765, 0.501686, 315.71000807294183, 0.162016, 0.687316, 0.499129, 317.670258023016, 0.166383, 0.690856, 0.496502, 319.6310079093182, 0.170948, 0.694384, 0.493803, 321.5912578593924, 0.175707, 0.6979, 0.491033, 323.5520077456946, 0.180653, 0.701402, 0.488189, 325.51225769576877, 0.185783, 0.704891, 0.485273, 327.473007582071, 0.19109, 0.708366, 0.482284, 329.4337574683732, 0.196571, 0.711827, 0.479221, 331.39400741844736, 0.202219, 0.715272, 0.476084, 333.35475730474957, 0.20803, 0.718701, 0.472873, 335.31500725482374, 0.214, 0.722114, 0.469588, 337.27575714112595, 0.220124, 0.725509, 0.466226, 339.2360070912001, 0.226397, 0.728888, 0.462789, 341.19675697750233, 0.232815, 0.732247, 0.459277, 343.15750686380454, 0.239374, 0.735588, 0.455688, 345.1177568138787, 0.24607, 0.73891, 0.452024, 347.0785067001809, 0.252899, 0.742211, 0.448284, 349.0387566502551, 0.259857, 0.745492, 0.444467, 350.99950653655725, 0.266941, 0.748751, 0.440573, 352.9597564866315, 0.274149, 0.751988, 0.436601, 354.9205063729337, 0.281477, 0.755203, 0.432552, 356.8807563230079, 0.288921, 0.758394, 0.428426, 358.84150620931007, 0.296479, 0.761561, 0.424223, 360.8022560956123, 0.304148, 0.764704, 0.419943, 362.76250604568645, 0.311925, 0.767822, 0.415586, 364.7232559319886, 0.319809, 0.770914, 0.411152, 366.68350588206283, 0.327796, 0.77398, 0.40664, 368.64425576836504, 0.335885, 0.777018, 0.402049, 370.6045057184392, 0.344074, 0.780029, 0.397381, 372.5652556047414, 0.35236, 0.783011, 0.392636, 374.52600549104363, 0.360741, 0.785964, 0.387814, 376.4862554411178, 0.369214, 0.788888, 0.382914, 378.44700532742, 0.377779, 0.791781, 0.377939, 380.4072552774942, 0.386433, 0.794644, 0.372886, 382.3680051637964, 0.395174, 0.797475, 0.367757, 384.32825511387057, 0.404001, 0.800275, 0.362552, 386.2890050001728, 0.412913, 0.803041, 0.357269, 388.249754886475, 0.421908, 0.805774, 0.35191, 390.21000483654916, 0.430983, 0.808473, 0.346476, 392.17075472285137, 0.440137, 0.811138, 0.340967, 394.13100467292554, 0.449368, 0.813768, 0.335384, 396.09175455922775, 0.458674, 0.816363, 0.329727, 398.0520045093019, 0.468053, 0.818921, 0.323998, 400.01275439560413, 0.477504, 0.821444, 0.318195, 401.97350428190634, 0.487026, 0.823929, 0.312321, 403.9337542319805, 0.496615, 0.826376, 0.306377, 405.8945041182827, 0.506271, 0.828786, 0.300362, 407.8547540683569, 0.515992, 0.831158, 0.294279, 409.8155039546591, 0.525776, 0.833491, 0.288127, 411.7757539047333, 0.535621, 0.835785, 0.281908, 413.7365037910355, 0.545524, 0.838039, 0.275626, 415.6972536773377, 0.555484, 0.840254, 0.269281, 417.65750362741187, 0.565498, 0.84243, 0.262877, 419.6182535137141, 0.575563, 0.844566, 0.256415, 421.57850346378825, 0.585678, 0.846661, 0.249897, 423.53925335009046, 0.595839, 0.848717, 0.243329, 425.49950330016463, 0.606045, 0.850733, 0.236712, 427.46025318646684, 0.616293, 0.852709, 0.230052, 429.42100307276905, 0.626579, 0.854645, 0.223353, 431.3812530228432, 0.636902, 0.856542, 0.21662, 433.34200290914544, 0.647257, 0.8584, 0.209861, 435.3022528592196, 0.657642, 0.860219, 0.203082, 437.2630027455218, 0.668054, 0.861999, 0.196293, 439.223252695596, 0.678489, 0.863742, 0.189503, 441.1840025818982, 0.688944, 0.865448, 0.182725, 443.1447524682004, 0.699415, 0.867117, 0.175971, 445.1050024182746, 0.709898, 0.868751, 0.169257, 447.0657523045768, 0.720391, 0.87035, 0.162603, 449.02600225465096, 0.730889, 0.871916, 0.156029, 450.9867521409532, 0.741388, 0.873449, 0.149561, 452.94700209102734, 0.751884, 0.874951, 0.143228, 454.90775197732955, 0.762373, 0.876424, 0.137064, 456.8680019274037, 0.772852, 0.877868, 0.131109, 458.82875181370594, 0.783315, 0.879285, 0.125405, 460.78950170000815, 0.79376, 0.880678, 0.120005, 462.7497516500823, 0.804182, 0.882046, 0.114965, 464.7105015363845, 0.814576, 0.883393, 0.110347, 466.6707514864587, 0.82494, 0.88472, 0.106217, 468.6315013727609, 0.83527, 0.886029, 0.102646, 470.5917513228351, 0.845561, 0.887322, 0.099702, 472.5525012091373, 0.85581, 0.888601, 0.097452, 474.5132510954395, 0.866013, 0.889868, 0.095953, 476.4735010455137, 0.876168, 0.891125, 0.09525, 478.4342509318159, 0.886271, 0.892374, 0.095374, 480.39450088189005, 0.89632, 0.893616, 0.096335, 482.35525076819226, 0.906311, 0.894855, 0.098125, 484.31550071826643, 0.916242, 0.896091, 0.100717, 486.27625060456865, 0.926106, 0.89733, 0.104071, 488.23700049087086, 0.935904, 0.89857, 0.108131, 490.197250440945, 0.945636, 0.899815, 0.112838, 492.15800032724724, 0.9553, 0.901065, 0.118128, 494.1182502773214, 0.964894, 0.902323, 0.123941, 496.0790001636236, 0.974417, 0.90359, 0.130215, 498.0392501136978, 0.983868, 0.904867, 0.136897, 500.0, 0.993248, 0.906157, 0.143936]
	native_fieldsbaryon_densityLUT.ShowDataHistogram = 1
	native_fieldsbaryon_densityLUT.AutomaticDataHistogramComputation = 1
	native_fieldsbaryon_densityLUT.NanColor = [1.0, 0.0, 0.0]
	native_fieldsbaryon_densityLUT.ScalarRangeInitialized = 1.0

	# get opacity transfer function/opacity map for 'native_fieldsbaryon_density'
	native_fieldsbaryon_densityPWF = GetOpacityTransferFunction('native_fieldsbaryon_density')
	native_fieldsbaryon_densityPWF.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 25.701526641845703, 0.903743326663971, 0.5, 0.0, 500.0, 1.0, 0.5, 0.0]
	native_fieldsbaryon_densityPWF.ScalarRangeInitialized = 1

	# trace defaults for the display properties.
	resampleToImage2Display.Representation = 'Volume'
	resampleToImage2Display.ColorArrayName = ['POINTS', 'native_fields/baryon_density']
	resampleToImage2Display.LookupTable = native_fieldsbaryon_densityLUT
	resampleToImage2Display.SelectTCoordArray = 'None'
	resampleToImage2Display.SelectNormalArray = 'None'
	resampleToImage2Display.SelectTangentArray = 'None'
	resampleToImage2Display.OSPRayScaleArray = 'native_fields/baryon_density'
	resampleToImage2Display.OSPRayScaleFunction = 'PiecewiseFunction'
	resampleToImage2Display.SelectOrientationVectors = 'None'
	resampleToImage2Display.ScaleFactor = 51.199948799999994
	resampleToImage2Display.SelectScaleArray = 'None'
	resampleToImage2Display.GlyphType = 'Arrow'
	resampleToImage2Display.GlyphTableIndexArray = 'None'
	resampleToImage2Display.GaussianRadius = 2.5599974399999996
	resampleToImage2Display.SetScaleArray = ['POINTS', 'native_fields/baryon_density']
	resampleToImage2Display.ScaleTransferFunction = 'PiecewiseFunction'
	resampleToImage2Display.OpacityArray = ['POINTS', 'native_fields/baryon_density']
	resampleToImage2Display.OpacityTransferFunction = 'PiecewiseFunction'
	resampleToImage2Display.DataAxesGrid = 'GridAxesRepresentation'
	resampleToImage2Display.PolarAxes = 'PolarAxesRepresentation'
	resampleToImage2Display.ScalarOpacityUnitDistance = 1.7354386040415883
	resampleToImage2Display.ScalarOpacityFunction = native_fieldsbaryon_densityPWF
	resampleToImage2Display.OpacityArrayName = ['POINTS', 'native_fields/baryon_density']
	resampleToImage2Display.SliceFunction = 'Plane'
	resampleToImage2Display.Slice = 255

	# init the 'PiecewiseFunction' selected for 'OSPRayScaleFunction'
	resampleToImage2Display.OSPRayScaleFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 51.47661520540714, 1.0, 0.5, 0.0]

	# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
	resampleToImage2Display.ScaleTransferFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 28918.84765625, 1.0, 0.5, 0.0]

	# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
	resampleToImage2Display.OpacityTransferFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 28918.84765625, 1.0, 0.5, 0.0]

	# init the 'Plane' selected for 'SliceFunction'
	resampleToImage2Display.SliceFunction.Origin = [256.0, 256.0, 256.0]

	# setup the color legend parameters for each legend in this view

	# get color legend/bar for native_fieldsbaryon_densityLUT in view renderView1
	native_fieldsbaryon_densityLUTColorBar = GetScalarBar(native_fieldsbaryon_densityLUT, renderView1)
	native_fieldsbaryon_densityLUTColorBar.Position = [0.8713968957871396, 0.014925373134328358]
	native_fieldsbaryon_densityLUTColorBar.Title = 'native_fields/baryon_density'
	native_fieldsbaryon_densityLUTColorBar.ComponentTitle = ''
	native_fieldsbaryon_densityLUTColorBar.TitleFontFamily = 'Courier'
	native_fieldsbaryon_densityLUTColorBar.LabelFontFamily = 'Courier'
	native_fieldsbaryon_densityLUTColorBar.TitleColor = (0, 0, 0)
	native_fieldsbaryon_densityLUTColorBar.LabelColor = (0, 0, 0)
	native_fieldsbaryon_densityLUTColorBar.AddRangeLabels = 0

	# set color bar visibility
	native_fieldsbaryon_densityLUTColorBar.Visibility = 1

	# show color legend
	resampleToImage2Display.SetScalarBarVisibility(renderView1, True)

	SaveScreenshot(outputName, renderView1, ImageResolution=[800, 800], CompressionLevel='0')
	
	# ----------------------------------------------------------------
	# setup color maps and opacity mapes used in the visualization
	# note: the Get..() functions create a new object, if needed
	# ----------------------------------------------------------------

	# ----------------------------------------------------------------
	# restore active source
	SetActiveSource(resampleToImage2)
	# ----------------------------------------------------------------



if __name__ == '__main__':
	print("filename:", sys.argv[1])
	print("registration name:", sys.argv[2])
	print("output filename:", sys.argv[3])

	saveScreenshot(sys.argv[1], sys.argv[2], sys.argv[3])

# if __name__ == '__main__':
#     # generate extracts
#     SaveExtracts(ExtractsOutputDirectory='extracts')
