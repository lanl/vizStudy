# state file generated using paraview version 5.10.1
import sys

# uncomment the following three lines to ensure this script works in future versions
#import paraview
#paraview.compatibility.major = 5
#paraview.compatibility.minor = 10

#### import the simple module from the paraview
from paraview.simple import *

def saveScreenshot(inputFilename, regName, outputName):   
	#### disable automatic camera reset on 'Show'
	paraview.simple._DisableFirstRenderCameraReset()

	# ----------------------------------------------------------------
	# setup views used in the visualization
	# ----------------------------------------------------------------

	# Create a new 'Render View'
	renderView1 = CreateView('RenderView')
	renderView1.ViewSize = [800, 800]
	renderView1.AxesGrid = 'GridAxes3DActor'
	renderView1.StereoType = 'Crystal Eyes'
	renderView1.CameraPosition = [256.0, -1457.1836768696405, 256.0]
	renderView1.CameraFocalPoint = [256.0, 256.0, 256.0]
	renderView1.CameraViewUp = [0.0, 0.0, 1.0]
	renderView1.CameraViewAngle = 21.916666666666668
	renderView1.CameraFocalDisk = 1.0
	renderView1.CameraParallelScale = 443.4045633326258
	renderView1.BackEnd = ''

	renderView1.Background = (1., 1., 1.)
	renderView1.UseColorPaletteForBackground = 0

	SetActiveView(None)

	# ----------------------------------------------------------------
	# setup view layouts
	# ----------------------------------------------------------------

	# create new layout object 'Layout #1'
	layout1 = CreateLayout(name='Layout #1')
	layout1.AssignView(0, renderView1)
	layout1.SetSize(800, 800)

	# ----------------------------------------------------------------
	# restore active view
	SetActiveView(renderView1)
	# ----------------------------------------------------------------

	# ----------------------------------------------------------------
	# setup the data processing pipelines
	# ----------------------------------------------------------------

	# create a new 'VisItPixieReader'
	nVB_C009_l10n512_S12345T692_z54h5 = VisItPixieReader(registrationName=regName, FileName=inputFilename)
	nVB_C009_l10n512_S12345T692_z54h5.Meshes = ['mesh_512x512x512']
	nVB_C009_l10n512_S12345T692_z54h5.CellArrays = ['native_fields/baryon_density', 'native_fields/dark_matter_density', 'native_fields/temperature', 'native_fields/velocity_x']

	# create a new 'Resample To Image'
	resampleToImage2 = ResampleToImage(registrationName='ResampleToImage2', Input=nVB_C009_l10n512_S12345T692_z54h5)
	resampleToImage2.SamplingDimensions = [512, 512, 512]
	resampleToImage2.SamplingBounds = [0.0, 512.0, 0.0, 512.0, 0.0, 512.0]

	# ----------------------------------------------------------------
	# setup the visualization in view 'renderView1'
	# ----------------------------------------------------------------

	# show data from resampleToImage2
	resampleToImage2Display = Show(resampleToImage2, renderView1, 'UniformGridRepresentation')

	# get color transfer function/color map for 'native_fieldsbaryon_density'
	native_fieldsbaryon_densityLUT = GetColorTransferFunction('native_fieldsbaryon_density')
	native_fieldsbaryon_densityLUT.AutomaticRescaleRangeMode = 'Never'
	native_fieldsbaryon_densityLUT.RGBPoints = [0.06377197802066803, 0.050383, 0.029803, 0.527975, 2.024521864322871, 0.063536, 0.028426, 0.533124, 3.9847718143970514, 0.075353, 0.027206, 0.538007, 5.9455217006992545, 0.086222, 0.026125, 0.542658, 7.905771650773435, 0.096379, 0.025165, 0.547103, 9.86652153707564, 0.10598, 0.024309, 0.551368, 11.82677148714982, 0.115124, 0.023556, 0.555468, 13.787521373452023, 0.123903, 0.022878, 0.559423, 15.748271259754224, 0.132381, 0.022258, 0.56325, 17.708521209828405, 0.140603, 0.021687, 0.566959, 19.66927109613061, 0.148607, 0.021154, 0.570562, 21.62952104620479, 0.156421, 0.020651, 0.574065, 23.590270932506993, 0.16407, 0.020171, 0.577478, 25.55052088258117, 0.171574, 0.019706, 0.580806, 27.511270768883378, 0.17895, 0.019252, 0.584054, 29.47202065518558, 0.186213, 0.018803, 0.587228, 31.43227060525976, 0.193374, 0.018354, 0.59033, 33.39302049156197, 0.200445, 0.017902, 0.593364, 35.35327044163614, 0.207435, 0.017442, 0.596333, 37.31402032793835, 0.21435, 0.016973, 0.599239, 39.27427027801253, 0.221197, 0.016497, 0.602083, 41.23502016431473, 0.227983, 0.016007, 0.604867, 43.195770050616936, 0.234715, 0.015502, 0.607592, 45.156020000691115, 0.241396, 0.014979, 0.610259, 47.11676988699332, 0.248032, 0.014439, 0.612868, 49.0770198370675, 0.254627, 0.013882, 0.615419, 51.0377697233697, 0.261183, 0.013308, 0.617911, 52.998019673443885, 0.267703, 0.012716, 0.620346, 54.95876955974609, 0.274191, 0.012109, 0.622722, 56.919019509820274, 0.280648, 0.011488, 0.625038, 58.87976939612247, 0.287076, 0.010855, 0.627295, 60.84051928242467, 0.293478, 0.010213, 0.62949, 62.80076923249885, 0.299855, 0.009561, 0.631624, 64.76151911880106, 0.30621, 0.008902, 0.633694, 66.72176906887525, 0.312543, 0.008239, 0.6357, 68.68251895517743, 0.318856, 0.007576, 0.63764, 70.64276890525161, 0.32515, 0.006915, 0.639512, 72.60351879155382, 0.331426, 0.006261, 0.641316, 74.56426867785603, 0.337683, 0.005618, 0.643049, 76.5245186279302, 0.343925, 0.004991, 0.64471, 78.48526851423242, 0.35015, 0.004382, 0.646298, 80.4455184643066, 0.356359, 0.003798, 0.64781, 82.4062683506088, 0.362553, 0.003243, 0.649245, 84.36651830068297, 0.368733, 0.002724, 0.650601, 86.32726818698518, 0.374897, 0.002245, 0.651876, 88.28801807328738, 0.381047, 0.001814, 0.653068, 90.24826802336156, 0.387183, 0.001434, 0.654177, 92.20901790966377, 0.393304, 0.001114, 0.655199, 94.16926785973796, 0.399411, 0.000859, 0.656133, 96.13001774604015, 0.405503, 0.000678, 0.656977, 98.09026769611434, 0.41158, 0.000577, 0.65773, 100.05101758241653, 0.417642, 0.000564, 0.65839, 102.01176746871873, 0.423689, 0.000646, 0.658956, 103.97201741879292, 0.429719, 0.000831, 0.659425, 105.93276730509513, 0.435734, 0.001127, 0.659797, 107.8930172551693, 0.441732, 0.00154, 0.660069, 109.85376714147151, 0.447714, 0.00208, 0.66024, 111.8140170915457, 0.453677, 0.002755, 0.66031, 113.77476697784789, 0.459623, 0.003574, 0.660277, 115.73551686415009, 0.46555, 0.004545, 0.660139, 117.69576681422427, 0.471457, 0.005678, 0.659897, 119.65651670052648, 0.477344, 0.00698, 0.659549, 121.61676665060065, 0.48321, 0.00846, 0.659095, 123.57751653690286, 0.489055, 0.010127, 0.658534, 125.53776648697703, 0.494877, 0.01199, 0.657865, 127.49851637327926, 0.500678, 0.014055, 0.657088, 129.45926625958145, 0.506454, 0.016333, 0.656202, 131.41951620965563, 0.512206, 0.018833, 0.655209, 133.38026609595784, 0.517933, 0.021563, 0.654109, 135.340516046032, 0.523633, 0.024532, 0.652901, 137.3012659323342, 0.529306, 0.027747, 0.651586, 139.2615158824084, 0.534952, 0.031217, 0.650165, 141.2222657687106, 0.54057, 0.03495, 0.64864, 143.1830156550128, 0.546157, 0.038954, 0.64701, 145.14326560508698, 0.551715, 0.043136, 0.645277, 147.1040154913892, 0.557243, 0.047331, 0.643443, 149.06426544146336, 0.562738, 0.051545, 0.641509, 151.02501532776557, 0.568201, 0.055778, 0.639477, 152.98526527783974, 0.573632, 0.060028, 0.637349, 154.94601516414195, 0.579029, 0.064296, 0.635126, 156.90626511421613, 0.584391, 0.068579, 0.632812, 158.86701500051834, 0.589719, 0.072878, 0.630408, 160.82776488682055, 0.595011, 0.07719, 0.627917, 162.78801483689472, 0.600266, 0.081516, 0.625342, 164.74876472319693, 0.605485, 0.085854, 0.622686, 166.7090146732711, 0.610667, 0.090204, 0.619951, 168.6697645595733, 0.615812, 0.094564, 0.61714, 170.63001450964748, 0.620919, 0.098934, 0.614257, 172.5907643959497, 0.625987, 0.103312, 0.611305, 174.5515142822519, 0.631017, 0.107699, 0.608287, 176.51176423232607, 0.636008, 0.112092, 0.605205, 178.47251411862828, 0.640959, 0.116492, 0.602065, 180.43276406870245, 0.645872, 0.120898, 0.598867, 182.39351395500464, 0.650746, 0.125309, 0.595617, 184.35376390507884, 0.65558, 0.129725, 0.592317, 186.31451379138105, 0.660374, 0.134144, 0.588971, 188.27526367768326, 0.665129, 0.138566, 0.585582, 190.23551362775743, 0.669845, 0.142992, 0.582154, 192.19626351405964, 0.674522, 0.147419, 0.578688, 194.1565134641338, 0.67916, 0.151848, 0.575189, 196.11726335043602, 0.683758, 0.156278, 0.57166, 198.0775133005102, 0.688318, 0.160709, 0.568103, 200.0382631868124, 0.69284, 0.165141, 0.564522, 201.9990130731146, 0.697324, 0.169573, 0.560919, 203.95926302318878, 0.701769, 0.174005, 0.557296, 205.920012909491, 0.706178, 0.178437, 0.553657, 207.88026285956516, 0.710549, 0.182868, 0.550004, 209.84101274586737, 0.714883, 0.187299, 0.546338, 211.80126269594155, 0.719181, 0.191729, 0.542663, 213.76201258224376, 0.723444, 0.196158, 0.538981, 215.72276246854597, 0.72767, 0.200586, 0.535293, 217.68301241862014, 0.731862, 0.205013, 0.531601, 219.64376230492235, 0.736019, 0.209439, 0.527908, 221.60401225499652, 0.740143, 0.213864, 0.524216, 223.56476214129873, 0.744232, 0.218288, 0.520524, 225.5250120913729, 0.748289, 0.222711, 0.516834, 227.4857619776751, 0.752312, 0.227133, 0.513149, 229.44651186397732, 0.756304, 0.231555, 0.509468, 231.4067618140515, 0.760264, 0.235976, 0.505794, 233.3675117003537, 0.764193, 0.240396, 0.502126, 235.32776165042787, 0.76809, 0.244817, 0.498465, 237.28851153673008, 0.771958, 0.249237, 0.494813, 239.24876148680426, 0.775796, 0.253658, 0.491171, 241.20951137310647, 0.779604, 0.258078, 0.487539, 243.17026125940868, 0.783383, 0.2625, 0.483918, 245.13051120948285, 0.787133, 0.266922, 0.480307, 247.09126109578506, 0.790855, 0.271345, 0.476706, 249.05151104585923, 0.794549, 0.27577, 0.473117, 251.01226093216144, 0.798216, 0.280197, 0.469538, 252.97251088223564, 0.801855, 0.284626, 0.465971, 254.93326076853785, 0.805467, 0.289057, 0.462415, 256.893510718612, 0.809052, 0.293491, 0.45887, 258.8542606049142, 0.812612, 0.297928, 0.455338, 260.81501049121636, 0.816144, 0.302368, 0.451816, 262.7752604412906, 0.819651, 0.306812, 0.448306, 264.7360103275928, 0.823132, 0.311261, 0.444806, 266.69626027766697, 0.826588, 0.315714, 0.441316, 268.6570101639692, 0.830018, 0.320172, 0.437836, 270.61726011404335, 0.833422, 0.324635, 0.434366, 272.57801000034556, 0.836801, 0.329105, 0.430905, 274.5387598866477, 0.840155, 0.33358, 0.427455, 276.49900983672194, 0.843484, 0.338062, 0.424013, 278.45975972302415, 0.846788, 0.342551, 0.420579, 280.4200096730983, 0.850066, 0.347048, 0.417153, 282.38075955940053, 0.853319, 0.351553, 0.413734, 284.3410095094747, 0.856547, 0.356066, 0.410322, 286.3017593957769, 0.85975, 0.360588, 0.406917, 288.26250928207907, 0.862927, 0.365119, 0.403519, 290.2227592321533, 0.866078, 0.36966, 0.400126, 292.1835091184555, 0.869203, 0.374212, 0.396738, 294.1437590685297, 0.872303, 0.378774, 0.393355, 296.1045089548319, 0.875376, 0.383347, 0.389976, 298.06475890490606, 0.878423, 0.387932, 0.3866, 300.02550879120827, 0.881443, 0.392529, 0.383229, 301.9862586775105, 0.884436, 0.397139, 0.37986, 303.94650862758465, 0.887402, 0.401762, 0.376494, 305.90725851388686, 0.89034, 0.406398, 0.37313, 307.86750846396103, 0.89325, 0.411048, 0.369768, 309.82825835026324, 0.896131, 0.415712, 0.366407, 311.7885083003374, 0.898984, 0.420392, 0.363047, 313.7492581866396, 0.901807, 0.425087, 0.359688, 315.71000807294183, 0.904601, 0.429797, 0.356329, 317.670258023016, 0.907365, 0.434524, 0.35297, 319.6310079093182, 0.910098, 0.439268, 0.34961, 321.5912578593924, 0.9128, 0.444029, 0.346251, 323.5520077456946, 0.915471, 0.448807, 0.34289, 325.51225769576877, 0.918109, 0.453603, 0.339529, 327.473007582071, 0.920714, 0.458417, 0.336166, 329.4337574683732, 0.923287, 0.463251, 0.332801, 331.39400741844736, 0.925825, 0.468103, 0.329435, 333.35475730474957, 0.928329, 0.472975, 0.326067, 335.31500725482374, 0.930798, 0.477867, 0.322697, 337.27575714112595, 0.933232, 0.48278, 0.319325, 339.2360070912001, 0.93563, 0.487712, 0.315952, 341.19675697750233, 0.93799, 0.492667, 0.312575, 343.15750686380454, 0.940313, 0.497642, 0.309197, 345.1177568138787, 0.942598, 0.502639, 0.305816, 347.0785067001809, 0.944844, 0.507658, 0.302433, 349.0387566502551, 0.947051, 0.512699, 0.299049, 350.99950653655725, 0.949217, 0.517763, 0.295662, 352.9597564866315, 0.951344, 0.52285, 0.292275, 354.9205063729337, 0.953428, 0.52796, 0.288883, 356.8807563230079, 0.95547, 0.533093, 0.28549, 358.84150620931007, 0.957469, 0.53825, 0.282096, 360.8022560956123, 0.959424, 0.543431, 0.278701, 362.76250604568645, 0.961336, 0.548636, 0.275305, 364.7232559319886, 0.963203, 0.553865, 0.271909, 366.68350588206283, 0.965024, 0.559118, 0.268513, 368.64425576836504, 0.966798, 0.564396, 0.265118, 370.6045057184392, 0.968526, 0.5697, 0.261721, 372.5652556047414, 0.970205, 0.575028, 0.258325, 374.52600549104363, 0.971835, 0.580382, 0.254931, 376.4862554411178, 0.973416, 0.585761, 0.25154, 378.44700532742, 0.974947, 0.591165, 0.248151, 380.4072552774942, 0.976428, 0.596595, 0.244767, 382.3680051637964, 0.977856, 0.602051, 0.241387, 384.32825511387057, 0.979233, 0.607532, 0.238013, 386.2890050001728, 0.980556, 0.613039, 0.234646, 388.249754886475, 0.981826, 0.618572, 0.231287, 390.21000483654916, 0.983041, 0.624131, 0.227937, 392.17075472285137, 0.984199, 0.629718, 0.224595, 394.13100467292554, 0.985301, 0.63533, 0.221265, 396.09175455922775, 0.986345, 0.640969, 0.217948, 398.0520045093019, 0.987332, 0.646633, 0.214648, 400.01275439560413, 0.98826, 0.652325, 0.211364, 401.97350428190634, 0.989128, 0.658043, 0.2081, 403.9337542319805, 0.989935, 0.663787, 0.204859, 405.8945041182827, 0.990681, 0.669558, 0.201642, 407.8547540683569, 0.991365, 0.675355, 0.198453, 409.8155039546591, 0.991985, 0.681179, 0.195295, 411.7757539047333, 0.992541, 0.68703, 0.19217, 413.7365037910355, 0.993032, 0.692907, 0.189084, 415.6972536773377, 0.993456, 0.69881, 0.186041, 417.65750362741187, 0.993814, 0.704741, 0.183043, 419.6182535137141, 0.994103, 0.710698, 0.180097, 421.57850346378825, 0.994324, 0.716681, 0.177208, 423.53925335009046, 0.994474, 0.722691, 0.174381, 425.49950330016463, 0.994553, 0.728728, 0.171622, 427.46025318646684, 0.994561, 0.734791, 0.168938, 429.42100307276905, 0.994495, 0.74088, 0.166335, 431.3812530228432, 0.994355, 0.746995, 0.163821, 433.34200290914544, 0.994141, 0.753137, 0.161404, 435.3022528592196, 0.993851, 0.759304, 0.159092, 437.2630027455218, 0.993482, 0.765499, 0.156891, 439.223252695596, 0.993033, 0.77172, 0.154808, 441.1840025818982, 0.992505, 0.777967, 0.152855, 443.1447524682004, 0.991897, 0.784239, 0.151042, 445.1050024182746, 0.991209, 0.790537, 0.149377, 447.0657523045768, 0.990439, 0.796859, 0.14787, 449.02600225465096, 0.989587, 0.803205, 0.146529, 450.9867521409532, 0.988648, 0.809579, 0.145357, 452.94700209102734, 0.987621, 0.815978, 0.144363, 454.90775197732955, 0.986509, 0.822401, 0.143557, 456.8680019274037, 0.985314, 0.828846, 0.142945, 458.82875181370594, 0.984031, 0.835315, 0.142528, 460.78950170000815, 0.982653, 0.841812, 0.142303, 462.7497516500823, 0.98119, 0.848329, 0.142279, 464.7105015363845, 0.979644, 0.854866, 0.142453, 466.6707514864587, 0.977995, 0.861432, 0.142808, 468.6315013727609, 0.976265, 0.868016, 0.143351, 470.5917513228351, 0.974443, 0.874622, 0.144061, 472.5525012091373, 0.97253, 0.88125, 0.144923, 474.5132510954395, 0.970533, 0.887896, 0.145919, 476.4735010455137, 0.968443, 0.894564, 0.147014, 478.4342509318159, 0.966271, 0.901249, 0.14818, 480.39450088189005, 0.964021, 0.90795, 0.14937, 482.35525076819226, 0.961681, 0.914672, 0.15052, 484.31550071826643, 0.959276, 0.921407, 0.151566, 486.27625060456865, 0.956808, 0.928152, 0.152409, 488.23700049087086, 0.954287, 0.934908, 0.152921, 490.197250440945, 0.951726, 0.941671, 0.152925, 492.15800032724724, 0.949151, 0.948435, 0.152178, 494.1182502773214, 0.946602, 0.95519, 0.150328, 496.0790001636236, 0.944152, 0.961916, 0.146861, 498.0392501136978, 0.941896, 0.96859, 0.140956, 500.0, 0.940015, 0.975158, 0.131326]
	native_fieldsbaryon_densityLUT.ShowDataHistogram = 1
	native_fieldsbaryon_densityLUT.AutomaticDataHistogramComputation = 1
	native_fieldsbaryon_densityLUT.NanColor = [0.0, 1.0, 0.0]
	native_fieldsbaryon_densityLUT.ScalarRangeInitialized = 1.0

	# get opacity transfer function/opacity map for 'native_fieldsbaryon_density'
	native_fieldsbaryon_densityPWF = GetOpacityTransferFunction('native_fieldsbaryon_density')
	native_fieldsbaryon_densityPWF.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 25.701526641845703, 0.903743326663971, 0.5, 0.0, 500.0, 1.0, 0.5, 0.0]
	native_fieldsbaryon_densityPWF.ScalarRangeInitialized = 1

	# trace defaults for the display properties.
	resampleToImage2Display.Representation = 'Volume'
	resampleToImage2Display.ColorArrayName = ['POINTS', 'native_fields/baryon_density']
	resampleToImage2Display.LookupTable = native_fieldsbaryon_densityLUT
	resampleToImage2Display.SelectTCoordArray = 'None'
	resampleToImage2Display.SelectNormalArray = 'None'
	resampleToImage2Display.SelectTangentArray = 'None'
	resampleToImage2Display.OSPRayScaleArray = 'native_fields/baryon_density'
	resampleToImage2Display.OSPRayScaleFunction = 'PiecewiseFunction'
	resampleToImage2Display.SelectOrientationVectors = 'None'
	resampleToImage2Display.ScaleFactor = 51.199948799999994
	resampleToImage2Display.SelectScaleArray = 'None'
	resampleToImage2Display.GlyphType = 'Arrow'
	resampleToImage2Display.GlyphTableIndexArray = 'None'
	resampleToImage2Display.GaussianRadius = 2.5599974399999996
	resampleToImage2Display.SetScaleArray = ['POINTS', 'native_fields/baryon_density']
	resampleToImage2Display.ScaleTransferFunction = 'PiecewiseFunction'
	resampleToImage2Display.OpacityArray = ['POINTS', 'native_fields/baryon_density']
	resampleToImage2Display.OpacityTransferFunction = 'PiecewiseFunction'
	resampleToImage2Display.DataAxesGrid = 'GridAxesRepresentation'
	resampleToImage2Display.PolarAxes = 'PolarAxesRepresentation'
	resampleToImage2Display.ScalarOpacityUnitDistance = 1.7354386040415883
	resampleToImage2Display.ScalarOpacityFunction = native_fieldsbaryon_densityPWF
	resampleToImage2Display.OpacityArrayName = ['POINTS', 'native_fields/baryon_density']
	resampleToImage2Display.SliceFunction = 'Plane'
	resampleToImage2Display.Slice = 255

	# init the 'PiecewiseFunction' selected for 'OSPRayScaleFunction'
	resampleToImage2Display.OSPRayScaleFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 51.47661520540714, 1.0, 0.5, 0.0]

	# init the 'PiecewiseFunction' selected for 'ScaleTransferFunction'
	resampleToImage2Display.ScaleTransferFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 28918.84765625, 1.0, 0.5, 0.0]

	# init the 'PiecewiseFunction' selected for 'OpacityTransferFunction'
	resampleToImage2Display.OpacityTransferFunction.Points = [0.06377197802066803, 0.0, 0.5, 0.0, 28918.84765625, 1.0, 0.5, 0.0]

	# init the 'Plane' selected for 'SliceFunction'
	resampleToImage2Display.SliceFunction.Origin = [256.0, 256.0, 256.0]

	# setup the color legend parameters for each legend in this view

	# get color legend/bar for native_fieldsbaryon_densityLUT in view renderView1
	native_fieldsbaryon_densityLUTColorBar = GetScalarBar(native_fieldsbaryon_densityLUT, renderView1)
	native_fieldsbaryon_densityLUTColorBar.Position = [0.8713968957871396, 0.014925373134328358]
	native_fieldsbaryon_densityLUTColorBar.Title = 'native_fields/baryon_density'
	native_fieldsbaryon_densityLUTColorBar.ComponentTitle = ''
	native_fieldsbaryon_densityLUTColorBar.TitleFontFamily = 'Courier'
	native_fieldsbaryon_densityLUTColorBar.LabelFontFamily = 'Courier'
	native_fieldsbaryon_densityLUTColorBar.TitleColor = (0, 0, 0)
	native_fieldsbaryon_densityLUTColorBar.LabelColor = (0, 0, 0)
	native_fieldsbaryon_densityLUTColorBar.AddRangeLabels = 0

	# set color bar visibility
	native_fieldsbaryon_densityLUTColorBar.Visibility = 1

	# show color legend
	resampleToImage2Display.SetScalarBarVisibility(renderView1, True)

	SaveScreenshot(outputName, renderView1, ImageResolution=[800, 800], CompressionLevel='0')

	# ----------------------------------------------------------------
	# setup color maps and opacity mapes used in the visualization
	# note: the Get..() functions create a new object, if needed
	# ----------------------------------------------------------------

	# ----------------------------------------------------------------
	# restore active source
	SetActiveSource(resampleToImage2)
	# ----------------------------------------------------------------



if __name__ == '__main__':
	print("filename:", sys.argv[1])
	print("registration name:", sys.argv[2])
	print("output filename:", sys.argv[3])

	saveScreenshot(sys.argv[1], sys.argv[2], sys.argv[3])

# if __name__ == '__main__':
#     # generate extracts
#     SaveExtracts(ExtractsOutputDirectory='extracts')
